==================================================
This is an application programmed towards the Course Project
for CSCE 629 Analysis of Algorithms
Author: Rizu Jain
UIN: 430000753
==================================================

--------------------------------------------------
Building Test Application for Network Optimisation ...
rm -rf network_opt_dense network_opt_sparse
g++ -g -D PRINTPATH -D SPARSE -o network_opt_sparse heapStruct.cc  main.cc  genRandGraph.cc  routing_algo.cc
g++ -g -D PRINTPATH -o network_opt_dense heapStruct.cc  main.cc  genRandGraph.cc  routing_algo.cc
Done.

----------------FOR SPARSE GRAPHS #1--------------------
Hello World! Built on Nov 26 2019 :: 22:17:53
==
Iteration #1
Source s=3870 && Destination t=3172

DJIKSTRA USING NON HEAP
3870 -> 1624 -> 1625 -> 1800 -> 3291 -> 123 -> 174 -> 3212 -> 435 -> 434 -> 2086 -> 2343 -> 2361 -> 2360 -> 2143 -> 1606 -> 1605 -> 3211 -> 4088 -> 1984 -> 3124 -> 3125 -> 127 -> 1967 -> 2874 -> 4753 -> 4739 -> 4738 -> 3816 -> 4798 -> 4811 -> 4812 -> 1877 -> 369 -> 2140 -> 2141 -> 2965 -> 2915 -> 4243 -> 1429 -> 856 -> 46 -> 4635 -> 265 -> 3536 -> 680 -> 1441 -> 345 -> 344 -> 343 -> 1472 -> 819 -> 2951 -> 1493 -> 3172
*** Time Elapsed = 0.145572
*** Max Bandwidth  = 3255

DJIKSTRA USING HEAP
3870 -> 1624 -> 1625 -> 1800 -> 3291 -> 123 -> 174 -> 3212 -> 435 -> 434 -> 2086 -> 2343 -> 2361 -> 2360 -> 2143 -> 1606 -> 1605 -> 3211 -> 4088 -> 1984 -> 3124 -> 3125 -> 127 -> 1967 -> 2874 -> 4753 -> 4739 -> 4738 -> 3816 -> 4798 -> 4811 -> 4812 -> 1877 -> 369 -> 2140 -> 2141 -> 2965 -> 2915 -> 4243 -> 1429 -> 856 -> 46 -> 4635 -> 265 -> 3536 -> 680 -> 1441 -> 345 -> 344 -> 343 -> 1472 -> 819 -> 2951 -> 1493 -> 3172
*** Time Elapsed = 0.005617
*** Max Bandwidth  = 3255

KRUSKAL USING HEAP
3870 -> 1624 -> 1625 -> 1800 -> 3291 -> 123 -> 174 -> 3212 -> 435 -> 434 -> 2086 -> 2343 -> 2361 -> 2360 -> 2143 -> 1606 -> 1605 -> 3211 -> 4088 -> 1984 -> 3124 -> 3125 -> 127 -> 1967 -> 2874 -> 4753 -> 4739 -> 4738 -> 3816 -> 4798 -> 4811 -> 4812 -> 1877 -> 369 -> 2140 -> 2141 -> 2965 -> 2915 -> 4243 -> 1429 -> 856 -> 46 -> 4635 -> 265 -> 3536 -> 680 -> 1441 -> 345 -> 344 -> 343 -> 1472 -> 819 -> 2951 -> 1493 -> 3172
*** Time Elapsed = 0.026352
*** Max Bandwidth  = 3255

==
Iteration #2
Source s=2034 && Destination t=4119

DJIKSTRA USING NON HEAP
2034 -> 3448 -> 2317 -> 2005 -> 2359 -> 3614 -> 3613 -> 3663 -> 2388 -> 1963 -> 3192 -> 3638 -> 2839 -> 219 -> 217 -> 216 -> 149 -> 381 -> 382 -> 387 -> 386 -> 2672 -> 2671 -> 3384 -> 981 -> 3062 -> 1977 -> 1978 -> 4062 -> 4061 -> 1477 -> 3856 -> 3857 -> 3858 -> 3859 -> 209 -> 1733 -> 1062 -> 1063 -> 1064 -> 1065 -> 882 -> 881 -> 2418 -> 2419 -> 3098 -> 342 -> 550 -> 33 -> 34 -> 529 -> 299 -> 451 -> 215 -> 2120 -> 1882 -> 261 -> 260 -> 259 -> 916 -> 4457 -> 361 -> 4118 -> 4119
*** Time Elapsed = 0.098972
*** Max Bandwidth  = 3438

DJIKSTRA USING HEAP
2034 -> 3448 -> 2317 -> 2005 -> 2359 -> 3614 -> 3613 -> 3663 -> 2388 -> 4753 -> 2874 -> 1967 -> 127 -> 2705 -> 2704 -> 1980 -> 2757 -> 2756 -> 1237 -> 1658 -> 1659 -> 4292 -> 4365 -> 3106 -> 3105 -> 3304 -> 4219 -> 0 -> 1327 -> 4456 -> 4457 -> 361 -> 4118 -> 4119
*** Time Elapsed = 0.007773
*** Max Bandwidth  = 3438

KRUSKAL USING HEAP
2034 -> 3448 -> 2317 -> 2005 -> 2359 -> 3614 -> 3613 -> 3663 -> 2388 -> 4753 -> 4739 -> 4738 -> 4737 -> 4995 -> 4994 -> 361 -> 4118 -> 4119
*** Time Elapsed = 0.051074
*** Max Bandwidth  = 3438

==
Iteration #3
Source s=4495 && Destination t=999

DJIKSTRA USING NON HEAP
4495 -> 1495 -> 3572 -> 3571 -> 3570 -> 2410 -> 2876 -> 2877 -> 3931 -> 823 -> 822 -> 482 -> 1606 -> 1605 -> 3211 -> 4088 -> 1984 -> 3124 -> 3125 -> 3126 -> 3127 -> 4505 -> 1799 -> 1800 -> 1625 -> 1624 -> 3870 -> 4240 -> 147 -> 146 -> 1375 -> 2131 -> 704 -> 1531 -> 1530 -> 1529 -> 1528 -> 3441 -> 3440 -> 274 -> 542 -> 1824 -> 557 -> 3749 -> 3748 -> 1336 -> 1337 -> 1338 -> 1339 -> 4494 -> 4493 -> 3621 -> 4042 -> 4043 -> 4044 -> 328 -> 603 -> 1890 -> 1889 -> 145 -> 144 -> 462 -> 3123 -> 3122 -> 623 -> 327 -> 1014 -> 1013 -> 1936 -> 4736 -> 3152 -> 4016 -> 4015 -> 4014 -> 1304 -> 1661 -> 180 -> 179 -> 878 -> 784 -> 783 -> 3968 -> 1332 -> 1333 -> 140 -> 999
*** Time Elapsed = 0.053582
*** Max Bandwidth  = 3619

DJIKSTRA USING HEAP
4495 -> 1495 -> 3572 -> 3571 -> 3570 -> 2410 -> 2876 -> 2877 -> 3931 -> 823 -> 822 -> 482 -> 1606 -> 1605 -> 2681 -> 2680 -> 2679 -> 1842 -> 1191 -> 1190 -> 1189 -> 2777 -> 2778 -> 4476 -> 4475 -> 4474 -> 2439 -> 2440 -> 2441 -> 2541 -> 3292 -> 1085 -> 2753 -> 2465 -> 2466 -> 2467 -> 4226 -> 2217 -> 2218 -> 1451 -> 1452 -> 882 -> 1065 -> 779 -> 139 -> 140 -> 999
*** Time Elapsed = 0.007299
*** Max Bandwidth  = 3517

KRUSKAL USING HEAP
4495 -> 1495 -> 3572 -> 3571 -> 3570 -> 2410 -> 2876 -> 2877 -> 3931 -> 823 -> 822 -> 482 -> 1606 -> 1605 -> 2681 -> 2682 -> 4811 -> 4798 -> 4797 -> 4796 -> 2666 -> 2261 -> 2260 -> 4621 -> 1683 -> 1684 -> 2280 -> 108 -> 3029 -> 3028 -> 4328 -> 2753 -> 1085 -> 3292 -> 3293 -> 2560 -> 2559 -> 424 -> 423 -> 4316 -> 3700 -> 4818 -> 4817 -> 4816 -> 3365 -> 1008 -> 1009 -> 1010 -> 45 -> 4193 -> 4192 -> 190 -> 3557 -> 2062 -> 2061 -> 2060 -> 2676 -> 2677 -> 565 -> 273 -> 274 -> 542 -> 1824 -> 557 -> 3749 -> 3750 -> 3751 -> 940 -> 4689 -> 4690 -> 2770 -> 2771 -> 1071 -> 1070 -> 4364 -> 4919 -> 2404 -> 622 -> 623 -> 327 -> 1014 -> 1013 -> 1936 -> 4736 -> 3152 -> 4016 -> 4015 -> 4014 -> 1304 -> 1661 -> 180 -> 179 -> 878 -> 784 -> 783 -> 3968 -> 1332 -> 1333 -> 140 -> 999
*** Time Elapsed = 0.074641
*** Max Bandwidth  = 3619

==
Iteration #4
Source s=1089 && Destination t=1332

DJIKSTRA USING NON HEAP
1089 -> 3027 -> 1663 -> 1662 -> 1661 -> 1304 -> 1303 -> 1302 -> 1301 -> 953 -> 229 -> 228 -> 227 -> 226 -> 269 -> 270 -> 996 -> 882 -> 1065 -> 779 -> 139 -> 140 -> 1333 -> 1332
*** Time Elapsed = 0.031261
*** Max Bandwidth  = 3266

DJIKSTRA USING HEAP
1089 -> 3027 -> 1663 -> 1662 -> 3426 -> 3427 -> 4548 -> 4549 -> 2386 -> 4593 -> 4594 -> 2085 -> 2086 -> 434 -> 435 -> 3212 -> 174 -> 123 -> 3927 -> 3926 -> 3925 -> 3924 -> 3923 -> 3922 -> 2450 -> 2449 -> 2448 -> 4750 -> 3969 -> 3968 -> 1332
*** Time Elapsed = 0.011196
*** Max Bandwidth  = 3266

KRUSKAL USING HEAP
1089 -> 3027 -> 3028 -> 4328 -> 2753 -> 1085 -> 3292 -> 3293 -> 2560 -> 2559 -> 424 -> 423 -> 4316 -> 3700 -> 4818 -> 4817 -> 4816 -> 4298 -> 4297 -> 4296 -> 557 -> 3749 -> 3748 -> 3128 -> 3101 -> 3102 -> 2327 -> 2328 -> 4855 -> 4854 -> 4349 -> 1677 -> 2229 -> 2228 -> 2227 -> 877 -> 878 -> 784 -> 783 -> 3968 -> 1332
*** Time Elapsed = 0.101274
*** Max Bandwidth  = 3266

==
Iteration #5
Source s=3900 && Destination t=4411

DJIKSTRA USING NON HEAP
3900 -> 3901 -> 3899 -> 3898 -> 4745 -> 4746 -> 2045 -> 2044 -> 2945 -> 2944 -> 2867 -> 2868 -> 2173 -> 2174 -> 2175 -> 2176 -> 1464 -> 1463 -> 1664 -> 1663 -> 1662 -> 1661 -> 180 -> 179 -> 878 -> 877 -> 2227 -> 3176 -> 4411
*** Time Elapsed = 0.101703
*** Max Bandwidth  = 3624

DJIKSTRA USING HEAP
3900 -> 3901 -> 3899 -> 3898 -> 4745 -> 4746 -> 2045 -> 2044 -> 2945 -> 3013 -> 3012 -> 3011 -> 2266 -> 4336 -> 4335 -> 4334 -> 4333 -> 2009 -> 2010 -> 906 -> 905 -> 904 -> 502 -> 3314 -> 3406 -> 3405 -> 3404 -> 825 -> 826 -> 3240 -> 3239 -> 2207 -> 2208 -> 43 -> 42 -> 41 -> 2831 -> 2832 -> 1992 -> 1993 -> 4512 -> 4511 -> 4510 -> 4509 -> 397 -> 396 -> 3984 -> 323 -> 2877 -> 3931 -> 3930 -> 1727 -> 3565 -> 4409 -> 4410 -> 4411
*** Time Elapsed = 0.005971
*** Max Bandwidth  = 3624

KRUSKAL USING HEAP
3900 -> 3901 -> 3899 -> 3898 -> 4745 -> 4746 -> 2045 -> 2044 -> 2945 -> 3013 -> 3012 -> 3011 -> 2266 -> 4336 -> 4335 -> 4334 -> 4333 -> 4332 -> 4331 -> 4009 -> 4008 -> 4653 -> 4406 -> 4407 -> 4408 -> 4409 -> 4410 -> 4411
*** Time Elapsed = 0.125808
*** Max Bandwidth  = 3624
--------------------------------------------------
----------------FOR SPARSE GRAPHS #2--------------------
Hello World! Built on Nov 26 2019 :: 22:17:53
==
Iteration #1
Source s=1998 && Destination t=2498

DJIKSTRA USING NON HEAP
1998 -> 3015 -> 1932 -> 2291 -> 2290 -> 1711 -> 3557 -> 3490 -> 3440 -> 1361 -> 2730 -> 2464 -> 1398 -> 1397 -> 3546 -> 68 -> 2619 -> 402 -> 2417 -> 2416 -> 770 -> 1669 -> 1670 -> 252 -> 251 -> 383 -> 384 -> 77 -> 886 -> 887 -> 901 -> 3097 -> 4635 -> 4497 -> 2498
*** Time Elapsed = 0.136164
*** Max Bandwidth  = 3221

DJIKSTRA USING HEAP
1998 -> 3015 -> 1932 -> 2291 -> 2290 -> 1711 -> 3557 -> 3490 -> 3440 -> 1361 -> 2730 -> 2464 -> 1398 -> 1397 -> 3546 -> 68 -> 2604 -> 2603 -> 4063 -> 3426 -> 1332 -> 912 -> 4179 -> 4180 -> 2181 -> 2180 -> 4004 -> 3097 -> 4635 -> 4497 -> 2498
*** Time Elapsed = 0.005396
*** Max Bandwidth  = 3221

KRUSKAL USING HEAP
1998 -> 3015 -> 1932 -> 2291 -> 2290 -> 1711 -> 3557 -> 3490 -> 3440 -> 1361 -> 2730 -> 2464 -> 1398 -> 1397 -> 3546 -> 68 -> 2619 -> 402 -> 969 -> 970 -> 808 -> 807 -> 768 -> 4644 -> 3806 -> 3807 -> 1531 -> 2287 -> 2288 -> 4165 -> 4164 -> 4163 -> 2275 -> 585 -> 884 -> 380 -> 381 -> 237 -> 280 -> 176 -> 4553 -> 576 -> 575 -> 3436 -> 4693 -> 690 -> 3833 -> 3832 -> 3049 -> 3048 -> 4138 -> 4137 -> 1785 -> 1317 -> 229 -> 191 -> 3000 -> 620 -> 2273 -> 2559 -> 4209 -> 4208 -> 57 -> 3645 -> 3644 -> 2759 -> 2760 -> 2811 -> 4985 -> 4984 -> 4983 -> 163 -> 299 -> 298 -> 686 -> 1107 -> 4215 -> 444 -> 886 -> 887 -> 901 -> 3097 -> 4635 -> 4497 -> 2498
*** Time Elapsed = 0.026417
*** Max Bandwidth  = 3221

==
Iteration #2
Source s=2559 && Destination t=100

DJIKSTRA USING NON HEAP
2559 -> 4209 -> 4208 -> 57 -> 3645 -> 3644 -> 2759 -> 3881 -> 2717 -> 2320 -> 593 -> 592 -> 4461 -> 4462 -> 4463 -> 246 -> 1839 -> 1305 -> 3605 -> 3606 -> 2767 -> 1684 -> 2672 -> 2673 -> 2674 -> 2675 -> 585 -> 2275 -> 4163 -> 4164 -> 4165 -> 2288 -> 2287 -> 1531 -> 3807 -> 951 -> 3060 -> 3009 -> 4231 -> 4232 -> 618 -> 2331 -> 3980 -> 1801 -> 1799 -> 1798 -> 581 -> 4602 -> 4603 -> 4604 -> 4605 -> 2728 -> 3877 -> 3876 -> 622 -> 563 -> 3995 -> 3295 -> 3620 -> 3621 -> 3622 -> 1790 -> 1789 -> 1000 -> 1001 -> 3523 -> 3522 -> 299 -> 298 -> 686 -> 1107 -> 4215 -> 444 -> 886 -> 77 -> 3608 -> 3609 -> 3610 -> 4999 -> 100
*** Time Elapsed = 0.174512
*** Max Bandwidth  = 3286

DJIKSTRA USING HEAP
2559 -> 4209 -> 4208 -> 57 -> 3645 -> 3644 -> 2759 -> 3881 -> 2717 -> 2320 -> 593 -> 592 -> 4461 -> 4462 -> 4463 -> 246 -> 247 -> 2834 -> 64 -> 63 -> 1680 -> 877 -> 1627 -> 341 -> 4988 -> 4987 -> 1987 -> 4005 -> 4004 -> 3097 -> 901 -> 887 -> 886 -> 77 -> 3608 -> 3609 -> 3610 -> 4999 -> 100
*** Time Elapsed = 0.007782
*** Max Bandwidth  = 3286

KRUSKAL USING HEAP
2559 -> 4209 -> 4208 -> 57 -> 3645 -> 3644 -> 2759 -> 3881 -> 2717 -> 2320 -> 593 -> 592 -> 4461 -> 4462 -> 4463 -> 246 -> 1839 -> 1305 -> 3605 -> 3606 -> 2767 -> 1684 -> 2672 -> 2673 -> 2674 -> 2675 -> 585 -> 2275 -> 4163 -> 4164 -> 4165 -> 2288 -> 2287 -> 1531 -> 3807 -> 951 -> 3060 -> 3009 -> 4231 -> 4232 -> 618 -> 2331 -> 3980 -> 1801 -> 1799 -> 1798 -> 581 -> 4602 -> 4603 -> 4604 -> 4605 -> 2728 -> 3877 -> 3876 -> 622 -> 563 -> 3995 -> 3295 -> 3620 -> 3621 -> 3622 -> 1790 -> 1789 -> 1000 -> 1001 -> 3523 -> 3522 -> 299 -> 298 -> 686 -> 1107 -> 4215 -> 444 -> 886 -> 77 -> 3608 -> 3609 -> 3610 -> 4999 -> 100
*** Time Elapsed = 0.050657
*** Max Bandwidth  = 3286

==
Iteration #3
Source s=4046 && Destination t=2820

DJIKSTRA USING NON HEAP
4046 -> 0 -> 3940 -> 410 -> 409 -> 37 -> 36 -> 16 -> 60 -> 61 -> 115 -> 116 -> 292 -> 291 -> 290 -> 289 -> 288 -> 287 -> 286 -> 285 -> 284 -> 283 -> 454 -> 453 -> 728 -> 729 -> 730 -> 360 -> 359 -> 742 -> 185 -> 184 -> 183 -> 1492 -> 769 -> 770 -> 771 -> 772 -> 824 -> 658 -> 1653 -> 1654 -> 1970 -> 2820
*** Time Elapsed = 0.089222
*** Max Bandwidth  = 3123

DJIKSTRA USING HEAP
4046 -> 0 -> 3940 -> 3939 -> 1317 -> 229 -> 191 -> 1120 -> 1119 -> 10 -> 3832 -> 3833 -> 690 -> 4693 -> 4694 -> 4695 -> 4696 -> 845 -> 2818 -> 2819 -> 2820
*** Time Elapsed = 0.006687
*** Max Bandwidth  = 3123

KRUSKAL USING HEAP
4046 -> 0 -> 3940 -> 3939 -> 1317 -> 229 -> 191 -> 3000 -> 620 -> 621 -> 622 -> 111 -> 112 -> 2336 -> 3098 -> 1969 -> 1970 -> 2820
*** Time Elapsed = 0.075455
*** Max Bandwidth  = 3123

==
Iteration #4
Source s=1942 && Destination t=4832

DJIKSTRA USING NON HEAP
1942 -> 3189 -> 2461 -> 2734 -> 2735 -> 2736 -> 1033 -> 1975 -> 4642 -> 2073 -> 1188 -> 1428 -> 246 -> 247 -> 2834 -> 64 -> 605 -> 606 -> 2006 -> 704 -> 703 -> 1763 -> 3058 -> 818 -> 819 -> 827 -> 828 -> 1393 -> 1394 -> 2733 -> 1138 -> 1139 -> 1140 -> 1315 -> 1314 -> 3131 -> 1864 -> 1863 -> 3422 -> 2635 -> 951 -> 3060 -> 3061 -> 3062 -> 912 -> 4179 -> 4180 -> 4181 -> 4182 -> 3468 -> 3467 -> 1241 -> 1289 -> 1290 -> 3168 -> 3167 -> 3166 -> 3888 -> 3889 -> 3890 -> 4831 -> 4832
*** Time Elapsed = 0.119729
*** Max Bandwidth  = 3606

DJIKSTRA USING HEAP
1942 -> 3189 -> 2461 -> 2734 -> 2735 -> 2736 -> 1033 -> 1975 -> 4642 -> 2073 -> 1188 -> 1428 -> 246 -> 1839 -> 1305 -> 3605 -> 3606 -> 2767 -> 1684 -> 2672 -> 2673 -> 2674 -> 2675 -> 585 -> 2275 -> 4163 -> 4164 -> 4165 -> 2288 -> 2289 -> 2290 -> 2291 -> 1932 -> 1933 -> 2895 -> 4894 -> 1334 -> 3167 -> 3166 -> 3888 -> 3889 -> 3890 -> 4831 -> 4832
*** Time Elapsed = 0.006434
*** Max Bandwidth  = 3606

KRUSKAL USING HEAP
1942 -> 3189 -> 2461 -> 2734 -> 2735 -> 2736 -> 1033 -> 1975 -> 4642 -> 2073 -> 1188 -> 2299 -> 2298 -> 464 -> 465 -> 2270 -> 6 -> 7 -> 737 -> 738 -> 739 -> 1726 -> 573 -> 3140 -> 3141 -> 700 -> 701 -> 702 -> 2840 -> 2841 -> 3766 -> 4501 -> 720 -> 3338 -> 420 -> 419 -> 78 -> 77 -> 76 -> 75 -> 74 -> 73 -> 3332 -> 3333 -> 851 -> 850 -> 2993 -> 2479 -> 4286 -> 4287 -> 4288 -> 484 -> 485 -> 3509 -> 3508 -> 4656 -> 3623 -> 3622 -> 3621 -> 3620 -> 3619 -> 3618 -> 301 -> 302 -> 303 -> 90 -> 3235 -> 3234 -> 2752 -> 2751 -> 2750 -> 1073 -> 4221 -> 4222 -> 4223 -> 3928 -> 3927 -> 3714 -> 2427 -> 2428 -> 1161 -> 2823 -> 2822 -> 2022 -> 2021 -> 4799 -> 4800 -> 1186 -> 543 -> 1544 -> 1543 -> 1542 -> 3080 -> 4637 -> 4636 -> 4611 -> 2712 -> 2713 -> 207 -> 81 -> 3889 -> 3890 -> 4831 -> 4832
*** Time Elapsed = 0.101422
*** Max Bandwidth  = 3606

==
Iteration #5
Source s=3645 && Destination t=4452

DJIKSTRA USING NON HEAP
3645 -> 2784 -> 2785 -> 2786 -> 4914 -> 4913 -> 4912 -> 1586 -> 1587 -> 3633 -> 3634 -> 21 -> 20 -> 817 -> 818 -> 819 -> 827 -> 828 -> 1393 -> 1394 -> 2536 -> 2537 -> 874 -> 875 -> 2675 -> 585 -> 586 -> 1411 -> 1410 -> 3402 -> 3403 -> 3404 -> 2266 -> 2267 -> 2268 -> 1158 -> 1277 -> 1278 -> 1505 -> 1506 -> 1507 -> 3384 -> 3383 -> 3382 -> 3381 -> 3380 -> 3379 -> 3378 -> 3201 -> 3413 -> 3412 -> 1090 -> 3674 -> 3673 -> 2141 -> 2142 -> 1181 -> 1182 -> 1183 -> 1609 -> 91 -> 90 -> 303 -> 302 -> 301 -> 3618 -> 3619 -> 3620 -> 3621 -> 4452
*** Time Elapsed = 0.068480
*** Max Bandwidth  = 3680

DJIKSTRA USING HEAP
3645 -> 2784 -> 2785 -> 2786 -> 4914 -> 4913 -> 4912 -> 1586 -> 3115 -> 3116 -> 2616 -> 2617 -> 2618 -> 2619 -> 68 -> 2604 -> 2603 -> 4063 -> 4062 -> 4061 -> 4060 -> 1097 -> 3219 -> 1857 -> 2277 -> 2276 -> 2275 -> 585 -> 586 -> 1411 -> 1412 -> 3785 -> 3587 -> 4663 -> 3384 -> 3874 -> 3875 -> 3876 -> 622 -> 563 -> 3995 -> 3295 -> 3620 -> 3621 -> 4452
*** Time Elapsed = 0.012245
*** Max Bandwidth  = 3680

KRUSKAL USING HEAP
3645 -> 2784 -> 2785 -> 2786 -> 4914 -> 4913 -> 4912 -> 1586 -> 1587 -> 3633 -> 3634 -> 21 -> 20 -> 817 -> 818 -> 819 -> 827 -> 828 -> 1393 -> 1394 -> 2536 -> 2537 -> 874 -> 875 -> 2675 -> 585 -> 586 -> 1411 -> 1412 -> 3785 -> 3587 -> 4663 -> 3384 -> 1507 -> 1506 -> 1505 -> 1278 -> 1277 -> 1158 -> 1159 -> 3854 -> 1181 -> 1182 -> 1183 -> 1609 -> 91 -> 90 -> 303 -> 302 -> 301 -> 3618 -> 3619 -> 3620 -> 3621 -> 4452
*** Time Elapsed = 0.125670
*** Max Bandwidth  = 3680
--------------------------------------------------
----------------FOR SPARSE GRAPHS #3--------------------
Hello World! Built on Nov 26 2019 :: 22:17:53
==
Iteration #1
Source s=549 && Destination t=2499

DJIKSTRA USING NON HEAP
549 -> 4949 -> 3740 -> 560 -> 559 -> 27 -> 282 -> 153 -> 154 -> 470 -> 471 -> 472 -> 473 -> 553 -> 313 -> 41 -> 43 -> 19 -> 20 -> 21 -> 50 -> 49 -> 67 -> 15 -> 18 -> 17 -> 16 -> 190 -> 189 -> 188 -> 289 -> 290 -> 316 -> 2499
*** Time Elapsed = 0.075084
*** Max Bandwidth  = 2631

DJIKSTRA USING HEAP
549 -> 4949 -> 3740 -> 135 -> 984 -> 4119 -> 4120 -> 1281 -> 4257 -> 2499
*** Time Elapsed = 0.004863
*** Max Bandwidth  = 2631

KRUSKAL USING HEAP
549 -> 4949 -> 4378 -> 2450 -> 3336 -> 742 -> 2025 -> 1640 -> 1639 -> 1908 -> 1360 -> 1359 -> 768 -> 3402 -> 4923 -> 3162 -> 2577 -> 653 -> 3312 -> 2351 -> 4285 -> 1429 -> 1428 -> 1427 -> 3166 -> 3167 -> 4126 -> 4125 -> 4124 -> 395 -> 765 -> 3373 -> 2948 -> 2949 -> 2013 -> 3911 -> 2797 -> 265 -> 3661 -> 683 -> 3910 -> 2652 -> 3775 -> 3776 -> 1280 -> 1281 -> 4257 -> 4258 -> 4259 -> 2253 -> 3869 -> 140 -> 4360 -> 4309 -> 3898 -> 3264 -> 4012 -> 4013 -> 2795 -> 2796 -> 3905 -> 3595 -> 3987 -> 231 -> 2856 -> 892 -> 536 -> 1089 -> 1090 -> 1889 -> 958 -> 4457 -> 444 -> 1770 -> 1769 -> 3993 -> 2499
*** Time Elapsed = 0.026186
*** Max Bandwidth  = 2631

==
Iteration #2
Source s=2119 && Destination t=1581

DJIKSTRA USING NON HEAP
2119 -> 2001 -> 3364 -> 3363 -> 3362 -> 1711 -> 1710 -> 854 -> 1726 -> 1985 -> 1986 -> 161 -> 162 -> 163 -> 603 -> 1320 -> 1321 -> 470 -> 154 -> 153 -> 152 -> 920 -> 1996 -> 1997 -> 1312 -> 1311 -> 287 -> 1778 -> 2065 -> 561 -> 562 -> 563 -> 240 -> 241 -> 137 -> 868 -> 869 -> 1458 -> 1459 -> 4999 -> 1581
*** Time Elapsed = 0.144127
*** Max Bandwidth  = 3329

DJIKSTRA USING HEAP
2119 -> 2001 -> 3364 -> 3363 -> 3362 -> 1340 -> 1339 -> 3819 -> 981 -> 672 -> 671 -> 2535 -> 2534 -> 339 -> 338 -> 1852 -> 1853 -> 4598 -> 4307 -> 4411 -> 4410 -> 2337 -> 4999 -> 1581
*** Time Elapsed = 0.007113
*** Max Bandwidth  = 3258

KRUSKAL USING HEAP
2119 -> 2001 -> 3364 -> 3363 -> 3362 -> 3012 -> 2465 -> 4051 -> 4050 -> 3595 -> 3987 -> 231 -> 2856 -> 1242 -> 3701 -> 869 -> 1458 -> 1459 -> 4999 -> 1581
*** Time Elapsed = 0.051202
*** Max Bandwidth  = 3329

==
Iteration #3
Source s=3063 && Destination t=662

DJIKSTRA USING NON HEAP
3063 -> 326 -> 4833 -> 4832 -> 3927 -> 3926 -> 2607 -> 2608 -> 852 -> 851 -> 2063 -> 2064 -> 61 -> 2433 -> 2432 -> 711 -> 710 -> 1022 -> 1023 -> 2536 -> 2535 -> 2534 -> 339 -> 1569 -> 1568 -> 414 -> 1701 -> 1700 -> 1699 -> 1276 -> 408 -> 409 -> 476 -> 475 -> 1053 -> 13 -> 95 -> 94 -> 93 -> 174 -> 173 -> 172 -> 167 -> 168 -> 269 -> 270 -> 320 -> 937 -> 799 -> 800 -> 801 -> 646 -> 1189 -> 1188 -> 607 -> 606 -> 605 -> 356 -> 355 -> 1737 -> 500 -> 501 -> 1765 -> 1764 -> 1987 -> 1341 -> 1342 -> 1479 -> 1478 -> 662
*** Time Elapsed = 0.026548
*** Max Bandwidth  = 3400

DJIKSTRA USING HEAP
3063 -> 326 -> 4833 -> 4832 -> 4831 -> 3398 -> 2445 -> 2446 -> 4665 -> 3212 -> 4176 -> 4937 -> 4936 -> 4935 -> 141 -> 140 -> 3869 -> 2253 -> 4259 -> 2802 -> 2801 -> 445 -> 4641 -> 4640 -> 2720 -> 4881 -> 4880 -> 4053 -> 4052 -> 4051 -> 2627 -> 1478 -> 662
*** Time Elapsed = 0.006208
*** Max Bandwidth  = 3400

KRUSKAL USING HEAP
3063 -> 326 -> 4833 -> 4832 -> 4831 -> 3398 -> 2445 -> 2446 -> 4665 -> 3212 -> 4176 -> 4937 -> 4938 -> 2923 -> 2926 -> 4732 -> 2522 -> 2521 -> 2520 -> 2149 -> 855 -> 3752 -> 3753 -> 4772 -> 4058 -> 4057 -> 4299 -> 4298 -> 2467 -> 2466 -> 2465 -> 4051 -> 2627 -> 1478 -> 662
*** Time Elapsed = 0.074218
*** Max Bandwidth  = 3400

==
Iteration #4
Source s=2950 && Destination t=4563

DJIKSTRA USING NON HEAP
2950 -> 1503 -> 4081 -> 2397 -> 2396 -> 1658 -> 2484 -> 2485 -> 3924 -> 1635 -> 3673 -> 3672 -> 4017 -> 4018 -> 4563
*** Time Elapsed = 0.127149
*** Max Bandwidth  = 3462

DJIKSTRA USING HEAP
2950 -> 1503 -> 4081 -> 2397 -> 2398 -> 2399 -> 4132 -> 826 -> 3884 -> 3883 -> 3890 -> 4456 -> 4457 -> 2824 -> 2823 -> 2822 -> 3205 -> 4481 -> 293 -> 813 -> 814 -> 3726 -> 1745 -> 1744 -> 4606 -> 4607 -> 4608 -> 4227 -> 3963 -> 4018 -> 4563
*** Time Elapsed = 0.003971
*** Max Bandwidth  = 3462

KRUSKAL USING HEAP
2950 -> 2951 -> 2952 -> 2066 -> 2065 -> 561 -> 857 -> 417 -> 3425 -> 3426 -> 589 -> 1968 -> 1967 -> 2798 -> 2797 -> 3911 -> 3910 -> 683 -> 1043 -> 4326 -> 4325 -> 4324 -> 1811 -> 4176 -> 4937 -> 4938 -> 2923 -> 2926 -> 4732 -> 2522 -> 2521 -> 2520 -> 2149 -> 855 -> 3752 -> 3753 -> 4772 -> 4058 -> 4057 -> 4299 -> 4298 -> 2467 -> 2466 -> 2465 -> 4051 -> 2627 -> 2628 -> 2629 -> 4040 -> 4039 -> 3923 -> 3924 -> 1635 -> 3673 -> 3672 -> 4017 -> 4018 -> 4563
*** Time Elapsed = 0.102293
*** Max Bandwidth  = 3534

==
Iteration #5
Source s=1576 && Destination t=851

DJIKSTRA USING NON HEAP
1576 -> 4402 -> 4403 -> 1766 -> 1767 -> 1768 -> 613 -> 669 -> 670 -> 2628 -> 2629 -> 1415 -> 1342 -> 1341 -> 1340 -> 1339 -> 1338 -> 154 -> 470 -> 31 -> 30 -> 1737 -> 724 -> 725 -> 1721 -> 1720 -> 3449 -> 2570 -> 2571 -> 1935 -> 1936 -> 3594 -> 3054 -> 3053 -> 852 -> 851
*** Time Elapsed = 0.024403
*** Max Bandwidth  = 3665

DJIKSTRA USING HEAP
1576 -> 4402 -> 4403 -> 1766 -> 1767 -> 1768 -> 613 -> 669 -> 670 -> 333 -> 334 -> 335 -> 336 -> 4075 -> 4074 -> 3597 -> 3596 -> 2458 -> 4879 -> 4880 -> 1039 -> 2520 -> 2521 -> 2522 -> 4732 -> 1174 -> 1173 -> 1172 -> 1171 -> 1170 -> 1169 -> 4464 -> 4463 -> 3368 -> 2571 -> 1935 -> 1936 -> 3594 -> 3054 -> 3053 -> 852 -> 851
*** Time Elapsed = 0.007070
*** Max Bandwidth  = 3665

KRUSKAL USING HEAP
1576 -> 4402 -> 4403 -> 1766 -> 1767 -> 1768 -> 613 -> 669 -> 670 -> 2628 -> 2627 -> 4051 -> 2465 -> 2466 -> 2467 -> 4298 -> 4299 -> 4057 -> 4058 -> 4772 -> 3753 -> 3752 -> 855 -> 2149 -> 2520 -> 2521 -> 2522 -> 4732 -> 2926 -> 2923 -> 4938 -> 4937 -> 4176 -> 3212 -> 3432 -> 4639 -> 724 -> 725 -> 1721 -> 1720 -> 3449 -> 2570 -> 2571 -> 1935 -> 1936 -> 3594 -> 3054 -> 3053 -> 852 -> 851
*** Time Elapsed = 0.125657
*** Max Bandwidth  = 3665
--------------------------------------------------
----------------FOR SPARSE GRAPHS #4--------------------
Hello World! Built on Nov 26 2019 :: 22:17:53
==
Iteration #1
Source s=4680 && Destination t=3851

DJIKSTRA USING NON HEAP
4680 -> 1128 -> 813 -> 812 -> 4095 -> 2621 -> 4808 -> 4807 -> 4619 -> 3217 -> 4719 -> 495 -> 3851
*** Time Elapsed = 0.115871
*** Max Bandwidth  = 3352

DJIKSTRA USING HEAP
4680 -> 1128 -> 813 -> 812 -> 4095 -> 2621 -> 4808 -> 4807 -> 4619 -> 3217 -> 4719 -> 495 -> 3851
*** Time Elapsed = 0.005568
*** Max Bandwidth  = 3352

KRUSKAL USING HEAP
4680 -> 1128 -> 813 -> 812 -> 4095 -> 2621 -> 4808 -> 4807 -> 4619 -> 3217 -> 4719 -> 495 -> 3851
*** Time Elapsed = 0.026480
*** Max Bandwidth  = 3352

==
Iteration #2
Source s=36 && Destination t=2268

DJIKSTRA USING NON HEAP
36 -> 37 -> 3032 -> 3031 -> 3030 -> 3029 -> 3028 -> 1084 -> 1908 -> 55 -> 54 -> 1780 -> 1779 -> 2023 -> 2022 -> 1447 -> 1481 -> 1480 -> 2404 -> 2403 -> 2402 -> 762 -> 1311 -> 442 -> 979 -> 878 -> 879 -> 2050 -> 208 -> 358 -> 1867 -> 1866 -> 1865 -> 1864 -> 1863 -> 1862 -> 689 -> 487 -> 488 -> 489 -> 823 -> 669 -> 668 -> 667 -> 105 -> 437 -> 436 -> 101 -> 162 -> 161 -> 1448 -> 1713 -> 1714 -> 397 -> 398 -> 540 -> 541 -> 50 -> 51 -> 141 -> 70 -> 178 -> 179 -> 1102 -> 1103 -> 1104 -> 1946 -> 1947 -> 1720 -> 1721 -> 403 -> 3139 -> 3140 -> 3141 -> 3142 -> 3143 -> 1710 -> 1709 -> 1759 -> 2026 -> 2758 -> 2759 -> 2760 -> 2761 -> 2269 -> 2268
*** Time Elapsed = 0.069095
*** Max Bandwidth  = 3306

DJIKSTRA USING HEAP
36 -> 37 -> 3032 -> 3031 -> 3030 -> 3029 -> 4415 -> 221 -> 1138 -> 2 -> 774 -> 638 -> 2156 -> 2157 -> 612 -> 3012 -> 3011 -> 3514 -> 581 -> 3035 -> 3036 -> 3137 -> 660 -> 2865 -> 393 -> 879 -> 878 -> 979 -> 442 -> 4653 -> 4652 -> 1953 -> 2020 -> 2019 -> 1571 -> 1944 -> 1943 -> 1078 -> 3963 -> 99 -> 1124 -> 1082 -> 3373 -> 3374 -> 1764 -> 3150 -> 3151 -> 3152 -> 3550 -> 2268
*** Time Elapsed = 0.004322
*** Max Bandwidth  = 3306

KRUSKAL USING HEAP
36 -> 37 -> 3032 -> 3031 -> 3324 -> 4571 -> 4062 -> 295 -> 296 -> 297 -> 4826 -> 4825 -> 122 -> 121 -> 2728 -> 4613 -> 4659 -> 2621 -> 2622 -> 2623 -> 106 -> 75 -> 655 -> 4618 -> 3105 -> 2993 -> 4725 -> 2319 -> 1458 -> 400 -> 399 -> 42 -> 4910 -> 4911 -> 3868 -> 3867 -> 268 -> 1097 -> 3375 -> 3374 -> 1764 -> 3150 -> 3151 -> 3152 -> 3550 -> 2268
*** Time Elapsed = 0.050873
*** Max Bandwidth  = 3306

==
Iteration #3
Source s=1409 && Destination t=3558

DJIKSTRA USING NON HEAP
1409 -> 400 -> 399 -> 42 -> 4910 -> 4911 -> 3868 -> 3869 -> 3870 -> 3871 -> 1754 -> 2578 -> 2579 -> 140 -> 3481 -> 2138 -> 3901 -> 3902 -> 3846 -> 3287 -> 3288 -> 3289 -> 1874 -> 1875 -> 4735 -> 4734 -> 618 -> 3826 -> 3827 -> 1103 -> 1102 -> 179 -> 178 -> 70 -> 141 -> 51 -> 50 -> 4078 -> 4077 -> 4650 -> 4651 -> 1158 -> 1269 -> 106 -> 2623 -> 2622 -> 2621 -> 4659 -> 602 -> 601 -> 227 -> 226 -> 225 -> 2491 -> 1143 -> 1992 -> 3558
*** Time Elapsed = 0.074183
*** Max Bandwidth  = 3620

DJIKSTRA USING HEAP
1409 -> 400 -> 399 -> 42 -> 4910 -> 4911 -> 3868 -> 3869 -> 3870 -> 3871 -> 2656 -> 2655 -> 4815 -> 50 -> 4078 -> 4077 -> 4650 -> 4651 -> 1158 -> 1269 -> 106 -> 2623 -> 2622 -> 2621 -> 4659 -> 602 -> 601 -> 227 -> 226 -> 225 -> 2491 -> 1143 -> 1992 -> 3558
*** Time Elapsed = 0.005493
*** Max Bandwidth  = 3620

KRUSKAL USING HEAP
1409 -> 400 -> 399 -> 42 -> 4910 -> 4911 -> 3868 -> 3869 -> 3870 -> 3871 -> 2656 -> 2655 -> 4815 -> 50 -> 4078 -> 3608 -> 270 -> 269 -> 321 -> 3383 -> 3384 -> 2041 -> 4782 -> 2623 -> 2622 -> 2621 -> 4659 -> 602 -> 601 -> 227 -> 226 -> 225 -> 2491 -> 1143 -> 1992 -> 3558
*** Time Elapsed = 0.074500
*** Max Bandwidth  = 3620

==
Iteration #4
Source s=585 && Destination t=1461

DJIKSTRA USING NON HEAP
585 -> 586 -> 604 -> 605 -> 1491 -> 430 -> 429 -> 1214 -> 1215 -> 2677 -> 812 -> 4095 -> 2621 -> 4659 -> 4613 -> 3554 -> 3555 -> 1355 -> 1356 -> 3604 -> 3603 -> 3602 -> 3601 -> 441 -> 837 -> 2473 -> 2472 -> 1620 -> 2950 -> 2949 -> 849 -> 848 -> 452 -> 3577 -> 3578 -> 3579 -> 3580 -> 1463 -> 1462 -> 1461
*** Time Elapsed = 0.157109
*** Max Bandwidth  = 3483

DJIKSTRA USING HEAP
585 -> 586 -> 604 -> 605 -> 1491 -> 430 -> 429 -> 1214 -> 1215 -> 2677 -> 812 -> 4095 -> 2621 -> 4659 -> 4613 -> 3554 -> 3555 -> 1355 -> 1356 -> 3604 -> 3603 -> 3602 -> 3601 -> 441 -> 837 -> 2473 -> 2472 -> 1620 -> 2950 -> 2949 -> 849 -> 848 -> 452 -> 3577 -> 3578 -> 3579 -> 3580 -> 1463 -> 1462 -> 1461
*** Time Elapsed = 0.011364
*** Max Bandwidth  = 3483

KRUSKAL USING HEAP
585 -> 586 -> 604 -> 605 -> 1491 -> 430 -> 429 -> 1214 -> 1215 -> 2677 -> 812 -> 4095 -> 2621 -> 4659 -> 4613 -> 3554 -> 3555 -> 1355 -> 1356 -> 3604 -> 3603 -> 3602 -> 3601 -> 441 -> 837 -> 2473 -> 2472 -> 1620 -> 2950 -> 2949 -> 849 -> 848 -> 452 -> 3577 -> 3578 -> 3579 -> 3580 -> 1463 -> 1462 -> 1461
*** Time Elapsed = 0.101923
*** Max Bandwidth  = 3483

==
Iteration #5
Source s=4367 && Destination t=763

DJIKSTRA USING NON HEAP
4367 -> 3718 -> 3717 -> 2562 -> 3171 -> 4331 -> 4330 -> 4329 -> 4328 -> 2425 -> 2424 -> 343 -> 1655 -> 900 -> 899 -> 898 -> 897 -> 3218 -> 3217 -> 3216 -> 627 -> 626 -> 625 -> 28 -> 40 -> 41 -> 42 -> 43 -> 44 -> 45 -> 46 -> 80 -> 1429 -> 1415 -> 1416 -> 1138 -> 2 -> 774 -> 330 -> 329 -> 328 -> 1068 -> 1069 -> 172 -> 171 -> 170 -> 169 -> 196 -> 68 -> 67 -> 84 -> 83 -> 392 -> 391 -> 136 -> 137 -> 138 -> 139 -> 140 -> 141 -> 70 -> 71 -> 1456 -> 1455 -> 1454 -> 1215 -> 1216 -> 1217 -> 1218 -> 1219 -> 1220 -> 414 -> 415 -> 416 -> 417 -> 418 -> 419 -> 820 -> 819 -> 818 -> 760 -> 761 -> 762 -> 763
*** Time Elapsed = 0.011613
*** Max Bandwidth  = 3537

DJIKSTRA USING HEAP
4367 -> 3718 -> 3717 -> 2562 -> 3171 -> 4331 -> 4330 -> 4329 -> 4328 -> 3902 -> 3901 -> 2138 -> 3481 -> 140 -> 141 -> 142 -> 143 -> 144 -> 4964 -> 2944 -> 120 -> 119 -> 4809 -> 4808 -> 4807 -> 3736 -> 3735 -> 4824 -> 4823 -> 3083 -> 3769 -> 3770 -> 816 -> 817 -> 818 -> 760 -> 761 -> 762 -> 763
*** Time Elapsed = 0.008101
*** Max Bandwidth  = 3537

KRUSKAL USING HEAP
4367 -> 4366 -> 1904 -> 1905 -> 1906 -> 3870 -> 3871 -> 2656 -> 2655 -> 4815 -> 50 -> 4078 -> 4077 -> 4650 -> 4651 -> 1158 -> 1269 -> 106 -> 107 -> 2182 -> 2183 -> 3874 -> 3875 -> 4692 -> 4508 -> 4509 -> 4489 -> 853 -> 2950 -> 1620 -> 2472 -> 2473 -> 837 -> 441 -> 442 -> 1311 -> 762 -> 763
*** Time Elapsed = 0.125649
*** Max Bandwidth  = 3685
--------------------------------------------------
----------------FOR SPARSE GRAPHS #5--------------------
Hello World! Built on Nov 26 2019 :: 22:17:53
==
Iteration #1
Source s=3799 && Destination t=1554

DJIKSTRA USING NON HEAP
3799 -> 1644 -> 1645 -> 3066 -> 4719 -> 293 -> 1528 -> 1527 -> 2992 -> 2899 -> 431 -> 1005 -> 2016 -> 1250 -> 3390 -> 3391 -> 3106 -> 3107 -> 2017 -> 2018 -> 2019 -> 4544 -> 4545 -> 4546 -> 1766 -> 1765 -> 4622 -> 2496 -> 1554
*** Time Elapsed = 0.133118
*** Max Bandwidth  = 3312

DJIKSTRA USING HEAP
3799 -> 1644 -> 1645 -> 3066 -> 4719 -> 293 -> 1528 -> 1527 -> 2992 -> 2899 -> 431 -> 1005 -> 2016 -> 1250 -> 3390 -> 3391 -> 3106 -> 3107 -> 2017 -> 2018 -> 2019 -> 4544 -> 4545 -> 4546 -> 1766 -> 1765 -> 4622 -> 2496 -> 1554
*** Time Elapsed = 0.007049
*** Max Bandwidth  = 3312

KRUSKAL USING HEAP
3799 -> 1644 -> 1645 -> 3066 -> 4719 -> 293 -> 1528 -> 1527 -> 2992 -> 2899 -> 431 -> 1005 -> 2016 -> 1250 -> 3390 -> 3391 -> 3106 -> 3107 -> 2017 -> 2018 -> 2019 -> 4544 -> 4545 -> 4546 -> 1766 -> 1765 -> 4622 -> 2496 -> 1554
*** Time Elapsed = 0.026709
*** Max Bandwidth  = 3312

==
Iteration #2
Source s=400 && Destination t=842

DJIKSTRA USING NON HEAP
400 -> 401 -> 4120 -> 4121 -> 4122 -> 3055 -> 51 -> 3875 -> 2410 -> 4316 -> 4317 -> 4318 -> 1469 -> 4474 -> 4475 -> 504 -> 4536 -> 972 -> 4490 -> 345 -> 3967 -> 2163 -> 2164 -> 842
*** Time Elapsed = 0.003670
*** Max Bandwidth  = 3632

DJIKSTRA USING HEAP
400 -> 401 -> 4120 -> 4121 -> 4122 -> 3055 -> 51 -> 3875 -> 2410 -> 4316 -> 4317 -> 4318 -> 1469 -> 4474 -> 4475 -> 504 -> 4536 -> 972 -> 4490 -> 345 -> 3967 -> 2163 -> 2164 -> 842
*** Time Elapsed = 0.002186
*** Max Bandwidth  = 3632

KRUSKAL USING HEAP
400 -> 401 -> 4120 -> 4121 -> 4122 -> 3055 -> 51 -> 3875 -> 2410 -> 4316 -> 4317 -> 4318 -> 1469 -> 4474 -> 4475 -> 504 -> 4536 -> 972 -> 4490 -> 345 -> 3967 -> 2163 -> 2164 -> 842
*** Time Elapsed = 0.050694
*** Max Bandwidth  = 3632

==
Iteration #3
Source s=469 && Destination t=3073

DJIKSTRA USING NON HEAP
469 -> 0 -> 3 -> 2 -> 1 -> 1866 -> 1865 -> 1864 -> 3651 -> 3650 -> 3925 -> 4920 -> 2441 -> 2440 -> 2107 -> 1899 -> 527 -> 901 -> 4637 -> 1898 -> 3707 -> 3706 -> 4866 -> 3789 -> 698 -> 697 -> 4905 -> 4906 -> 1729 -> 1728 -> 742 -> 886 -> 885 -> 374 -> 1885 -> 2871 -> 2870 -> 2869 -> 2868 -> 4474 -> 4475 -> 504 -> 4536 -> 4535 -> 3285 -> 72 -> 2078 -> 2079 -> 661 -> 3073
*** Time Elapsed = 0.152772
*** Max Bandwidth  = 3440

DJIKSTRA USING HEAP
469 -> 0 -> 3 -> 2 -> 1 -> 1866 -> 1865 -> 1864 -> 3651 -> 3650 -> 3925 -> 4920 -> 2441 -> 2440 -> 2107 -> 1899 -> 527 -> 901 -> 4637 -> 1898 -> 3707 -> 3706 -> 4866 -> 3789 -> 698 -> 697 -> 4905 -> 4906 -> 1729 -> 1728 -> 742 -> 886 -> 885 -> 374 -> 1885 -> 2871 -> 2870 -> 2869 -> 2868 -> 4474 -> 4475 -> 504 -> 4536 -> 4535 -> 3285 -> 72 -> 2078 -> 2079 -> 661 -> 3073
*** Time Elapsed = 0.008693
*** Max Bandwidth  = 3440

KRUSKAL USING HEAP
469 -> 0 -> 3 -> 2 -> 1 -> 1866 -> 1865 -> 1864 -> 3651 -> 3650 -> 3925 -> 4920 -> 2441 -> 2440 -> 2107 -> 1899 -> 527 -> 901 -> 4637 -> 1898 -> 3707 -> 3706 -> 4866 -> 3789 -> 698 -> 697 -> 4905 -> 4906 -> 1729 -> 1728 -> 742 -> 886 -> 885 -> 374 -> 1885 -> 2871 -> 2870 -> 2869 -> 2868 -> 4474 -> 4475 -> 504 -> 4536 -> 4535 -> 3285 -> 72 -> 2078 -> 2079 -> 661 -> 3073
*** Time Elapsed = 0.074365
*** Max Bandwidth  = 3440

==
Iteration #4
Source s=4018 && Destination t=803

DJIKSTRA USING NON HEAP
4018 -> 3518 -> 3517 -> 3516 -> 3515 -> 1963 -> 1964 -> 1965 -> 1966 -> 1309 -> 1310 -> 1980 -> 966 -> 965 -> 1025 -> 146 -> 2574 -> 2465 -> 2477 -> 2476 -> 1900 -> 1899 -> 527 -> 762 -> 763 -> 764 -> 817 -> 293 -> 413 -> 412 -> 411 -> 330 -> 1794 -> 1793 -> 2025 -> 450 -> 2589 -> 2588 -> 2875 -> 2372 -> 2373 -> 1608 -> 1609 -> 577 -> 578 -> 1007 -> 1052 -> 1053 -> 3952 -> 3953 -> 3954 -> 4466 -> 4467 -> 4468 -> 4469 -> 738 -> 4725 -> 4726 -> 803
*** Time Elapsed = 0.137317
*** Max Bandwidth  = 3534

DJIKSTRA USING HEAP
4018 -> 3518 -> 3517 -> 3516 -> 4097 -> 4840 -> 34 -> 33 -> 32 -> 1298 -> 1297 -> 3150 -> 3151 -> 4932 -> 4389 -> 4388 -> 1143 -> 1142 -> 1141 -> 1140 -> 4484 -> 4483 -> 27 -> 28 -> 3231 -> 142 -> 10 -> 14 -> 15 -> 16 -> 823 -> 1198 -> 1199 -> 4626 -> 1245 -> 1959 -> 1960 -> 1961 -> 432 -> 4005 -> 4004 -> 317 -> 316 -> 3948 -> 3362 -> 3363 -> 3364 -> 4609 -> 159 -> 160 -> 1283 -> 1284 -> 1801 -> 1800 -> 2465 -> 2477 -> 2476 -> 1900 -> 1899 -> 1898 -> 4637 -> 4638 -> 90 -> 89 -> 88 -> 87 -> 1317 -> 4726 -> 803
*** Time Elapsed = 0.009819
*** Max Bandwidth  = 3520

KRUSKAL USING HEAP
4018 -> 3518 -> 3517 -> 3516 -> 4097 -> 4840 -> 34 -> 33 -> 32 -> 31 -> 36 -> 19 -> 20 -> 1938 -> 2499 -> 2500 -> 3152 -> 3151 -> 4932 -> 4931 -> 4930 -> 2740 -> 2741 -> 1003 -> 1065 -> 3021 -> 3022 -> 4396 -> 4397 -> 4398 -> 2659 -> 2660 -> 2661 -> 949 -> 667 -> 668 -> 1598 -> 1597 -> 1673 -> 1672 -> 361 -> 360 -> 888 -> 438 -> 437 -> 4537 -> 4538 -> 4539 -> 4540 -> 4541 -> 4311 -> 4310 -> 739 -> 738 -> 4725 -> 4726 -> 803
*** Time Elapsed = 0.101893
*** Max Bandwidth  = 3534

==
Iteration #5
Source s=1542 && Destination t=4079

DJIKSTRA USING NON HEAP
1542 -> 1387 -> 353 -> 352 -> 4122 -> 3055 -> 51 -> 3875 -> 2410 -> 4316 -> 4317 -> 4318 -> 1469 -> 4474 -> 2580 -> 2579 -> 4148 -> 4149 -> 4150 -> 4151 -> 4347 -> 2985 -> 2984 -> 2983 -> 4491 -> 4490 -> 345 -> 1111 -> 1110 -> 438 -> 437 -> 2454 -> 2453 -> 2452 -> 2451 -> 1179 -> 1178 -> 1177 -> 1186 -> 1185 -> 1184 -> 4937 -> 4938 -> 1099 -> 849 -> 1240 -> 1748 -> 1747 -> 1746 -> 1745 -> 1734 -> 280 -> 3985 -> 289 -> 288 -> 287 -> 286 -> 285 -> 284 -> 283 -> 4079
*** Time Elapsed = 0.075601
*** Max Bandwidth  = 3694

DJIKSTRA USING HEAP
1542 -> 1387 -> 353 -> 352 -> 4122 -> 3055 -> 51 -> 3875 -> 2410 -> 4316 -> 4317 -> 4318 -> 1469 -> 4474 -> 2580 -> 2579 -> 4148 -> 4149 -> 4150 -> 4151 -> 4347 -> 2985 -> 2984 -> 2983 -> 4491 -> 4490 -> 345 -> 1111 -> 1110 -> 438 -> 437 -> 2454 -> 2453 -> 2452 -> 2451 -> 1179 -> 1178 -> 1177 -> 1186 -> 1185 -> 1184 -> 4937 -> 4938 -> 1099 -> 849 -> 1240 -> 1748 -> 1747 -> 1746 -> 1745 -> 1734 -> 280 -> 3985 -> 289 -> 288 -> 287 -> 286 -> 285 -> 284 -> 283 -> 4079
*** Time Elapsed = 0.009515
*** Max Bandwidth  = 3694

KRUSKAL USING HEAP
1542 -> 1387 -> 353 -> 352 -> 4122 -> 3055 -> 51 -> 3875 -> 2410 -> 4316 -> 4317 -> 4318 -> 1469 -> 4474 -> 2580 -> 2579 -> 4148 -> 4149 -> 4150 -> 4151 -> 4347 -> 2985 -> 2984 -> 2983 -> 4491 -> 4490 -> 345 -> 1111 -> 1110 -> 438 -> 437 -> 2454 -> 2453 -> 2452 -> 2451 -> 1179 -> 1178 -> 1177 -> 1186 -> 1185 -> 1184 -> 4937 -> 4938 -> 1099 -> 849 -> 1240 -> 1748 -> 1747 -> 1746 -> 1745 -> 1734 -> 280 -> 3985 -> 289 -> 288 -> 287 -> 286 -> 285 -> 284 -> 283 -> 4079
*** Time Elapsed = 0.126354
*** Max Bandwidth  = 3694
--------------------------------------------------
----------------FOR DENSE GRAPHS #1--------------------
Hello World! Built on Nov 26 2019 :: 22:17:55
==
Iteration #1
Source s=3259 && Destination t=2952

DJIKSTRA USING NON HEAP
3259 -> 1209 -> 790 -> 2811 -> 3847 -> 619 -> 560 -> 3638 -> 3190 -> 2698 -> 1395 -> 899 -> 1304 -> 4288 -> 4287 -> 3336 -> 1956 -> 2788 -> 4066 -> 1130 -> 3619 -> 200 -> 1477 -> 1 -> 3888 -> 320 -> 3735 -> 2891 -> 2890 -> 2449 -> 3207 -> 1040 -> 3833 -> 439 -> 1620 -> 2577 -> 3831 -> 3926 -> 4138 -> 2952
*** Time Elapsed = 0.311510
*** Max Bandwidth  = 4089

DJIKSTRA USING HEAP
3259 -> 3622 -> 1688 -> 2577 -> 3831 -> 3926 -> 4138 -> 2952
*** Time Elapsed = 0.174779
*** Max Bandwidth  = 4089

KRUSKAL USING HEAP
3259 -> 1209 -> 1457 -> 3917 -> 2171 -> 4131 -> 3016 -> 367 -> 4492 -> 439 -> 3833 -> 1040 -> 3207 -> 2449 -> 2890 -> 2891 -> 3735 -> 320 -> 3888 -> 1 -> 1477 -> 1932 -> 927 -> 3667 -> 3375 -> 4122 -> 171 -> 678 -> 2197 -> 4117 -> 1389 -> 546 -> 4292 -> 2276 -> 3394 -> 4236 -> 3124 -> 4409 -> 4391 -> 1316 -> 30 -> 2084 -> 4720 -> 910 -> 4345 -> 1909 -> 4221 -> 2091 -> 2263 -> 1027 -> 574 -> 4115 -> 3992 -> 813 -> 2181 -> 2944 -> 2669 -> 2870 -> 694 -> 4607 -> 1604 -> 3731 -> 2952
*** Time Elapsed = 4.377486
*** Max Bandwidth  = 4089

==
Iteration #2
Source s=2671 && Destination t=490

DJIKSTRA USING NON HEAP
2671 -> 766 -> 2196 -> 2035 -> 4428 -> 4595 -> 1287 -> 2943 -> 2237 -> 1450 -> 4288 -> 4287 -> 3336 -> 1956 -> 2788 -> 4066 -> 1130 -> 3619 -> 200 -> 1477 -> 1 -> 3888 -> 320 -> 3735 -> 2891 -> 2890 -> 2449 -> 2887 -> 2912 -> 2825 -> 1599 -> 457 -> 2581 -> 1256 -> 3779 -> 2699 -> 4054 -> 551 -> 583 -> 2868 -> 4615 -> 1336 -> 2467 -> 490
*** Time Elapsed = 0.376062
*** Max Bandwidth  = 4091

DJIKSTRA USING HEAP
2671 -> 766 -> 2196 -> 2035 -> 4428 -> 4595 -> 1287 -> 2943 -> 2237 -> 873 -> 2806 -> 1108 -> 594 -> 1882 -> 3713 -> 555 -> 645 -> 4941 -> 2467 -> 490
*** Time Elapsed = 0.253587
*** Max Bandwidth  = 4091

KRUSKAL USING HEAP
2671 -> 766 -> 2196 -> 4011 -> 134 -> 923 -> 3693 -> 530 -> 4391 -> 4409 -> 3124 -> 4236 -> 3394 -> 2276 -> 4292 -> 546 -> 1389 -> 4117 -> 2197 -> 678 -> 171 -> 4122 -> 3375 -> 3667 -> 927 -> 1932 -> 1477 -> 1 -> 3888 -> 320 -> 3735 -> 2891 -> 2890 -> 2449 -> 2887 -> 2912 -> 2825 -> 1599 -> 457 -> 2581 -> 1256 -> 3779 -> 2699 -> 4054 -> 551 -> 583 -> 2868 -> 4615 -> 1336 -> 2467 -> 490
*** Time Elapsed = 9.426243
*** Max Bandwidth  = 4091

==
Iteration #3
Source s=1821 && Destination t=3804

DJIKSTRA USING NON HEAP
1821 -> 1041 -> 1729 -> 458 -> 1564 -> 2260 -> 923 -> 1160 -> 528 -> 1459 -> 1602 -> 1628 -> 1076 -> 289 -> 2038 -> 1617 -> 2174 -> 496 -> 1749 -> 406 -> 2031 -> 2237 -> 873 -> 240 -> 1920 -> 2117 -> 1146 -> 1145 -> 410 -> 1999 -> 356 -> 445 -> 1255 -> 768 -> 590 -> 1620 -> 2577 -> 1022 -> 1262 -> 1988 -> 1324 -> 388 -> 2339 -> 1029 -> 2669 -> 396 -> 874 -> 3804
*** Time Elapsed = 0.552437
*** Max Bandwidth  = 4087

DJIKSTRA USING HEAP
1821 -> 1041 -> 1729 -> 458 -> 360 -> 4583 -> 1302 -> 3066 -> 3937 -> 396 -> 874 -> 3804
*** Time Elapsed = 0.288909
*** Max Bandwidth  = 4087

KRUSKAL USING HEAP
1821 -> 1041 -> 1729 -> 2900 -> 3064 -> 2121 -> 3089 -> 3712 -> 3182 -> 2826 -> 2085 -> 2139 -> 2302 -> 3059 -> 4041 -> 2163 -> 4327 -> 4284 -> 354 -> 1551 -> 2455 -> 98 -> 617 -> 2104 -> 899 -> 1304 -> 4288 -> 1450 -> 2237 -> 2943 -> 1287 -> 472 -> 3303 -> 4788 -> 431 -> 3301 -> 1601 -> 2211 -> 2212 -> 4830 -> 3753 -> 4912 -> 1662 -> 4345 -> 910 -> 4720 -> 2084 -> 30 -> 1316 -> 4391 -> 4409 -> 1302 -> 3066 -> 3937 -> 396 -> 874 -> 3804
*** Time Elapsed = 14.877192
*** Max Bandwidth  = 4087

==
Iteration #4
Source s=1129 && Destination t=422

DJIKSTRA USING NON HEAP
1129 -> 4453 -> 4120 -> 418 -> 1148 -> 4545 -> 2435 -> 3264 -> 2501 -> 3627 -> 2742 -> 2804 -> 3646 -> 4102 -> 3301 -> 431 -> 4788 -> 3303 -> 472 -> 1287 -> 2943 -> 2237 -> 1450 -> 4288 -> 1304 -> 899 -> 1395 -> 2698 -> 3190 -> 3638 -> 344 -> 3633 -> 1675 -> 604 -> 478 -> 441 -> 3849 -> 623 -> 3729 -> 932 -> 2415 -> 3195 -> 1337 -> 1770 -> 422
*** Time Elapsed = 0.393297
*** Max Bandwidth  = 4092

DJIKSTRA USING HEAP
1129 -> 4453 -> 4120 -> 418 -> 1148 -> 4545 -> 2435 -> 3264 -> 2501 -> 3627 -> 2742 -> 2804 -> 1119 -> 4851 -> 1541 -> 2843 -> 1213 -> 3030 -> 3888 -> 1 -> 1477 -> 1932 -> 927 -> 3667 -> 3375 -> 4122 -> 171 -> 678 -> 2197 -> 4117 -> 1389 -> 546 -> 4292 -> 2276 -> 3394 -> 4236 -> 3124 -> 4409 -> 4391 -> 530 -> 3693 -> 923 -> 134 -> 4011 -> 2196 -> 2035 -> 4428 -> 4595 -> 1287 -> 2943 -> 2237 -> 873 -> 2806 -> 1108 -> 594 -> 4362 -> 333 -> 3095 -> 1543 -> 3106 -> 790 -> 2811 -> 3847 -> 619 -> 560 -> 3638 -> 3190 -> 2698 -> 1395 -> 56 -> 638 -> 1791 -> 483 -> 3759 -> 441 -> 3849 -> 623 -> 3729 -> 932 -> 2415 -> 3195 -> 1337 -> 1770 -> 422
*** Time Elapsed = 0.478773
*** Max Bandwidth  = 4092

KRUSKAL USING HEAP
1129 -> 4453 -> 4120 -> 418 -> 1148 -> 4545 -> 2435 -> 3264 -> 2501 -> 3627 -> 2742 -> 2804 -> 3646 -> 4102 -> 3301 -> 431 -> 4788 -> 3303 -> 472 -> 1287 -> 2943 -> 2237 -> 1450 -> 4288 -> 1154 -> 1769 -> 2657 -> 2026 -> 3937 -> 3066 -> 1302 -> 4409 -> 3124 -> 4236 -> 3394 -> 2276 -> 4292 -> 546 -> 1389 -> 4117 -> 2197 -> 678 -> 171 -> 4122 -> 3375 -> 3667 -> 927 -> 1932 -> 1477 -> 1 -> 3888 -> 320 -> 3735 -> 2891 -> 2890 -> 2449 -> 3207 -> 1040 -> 3833 -> 439 -> 4492 -> 367 -> 3016 -> 4131 -> 2171 -> 3917 -> 1457 -> 1209 -> 3259 -> 3622 -> 797 -> 3487 -> 943 -> 3962 -> 3195 -> 1337 -> 1770 -> 422
*** Time Elapsed = 21.188873
*** Max Bandwidth  = 4092

==
Iteration #5
Source s=2652 && Destination t=1245

DJIKSTRA USING NON HEAP
2652 -> 78 -> 2121 -> 3089 -> 3712 -> 3182 -> 2826 -> 2085 -> 2139 -> 2302 -> 3059 -> 4041 -> 2163 -> 2127 -> 2338 -> 206 -> 3416 -> 365 -> 868 -> 1472 -> 3042 -> 602 -> 10 -> 2581 -> 457 -> 1599 -> 2825 -> 2912 -> 2887 -> 2449 -> 2890 -> 2891 -> 3735 -> 320 -> 3888 -> 1 -> 1477 -> 200 -> 3619 -> 1130 -> 4066 -> 2788 -> 1956 -> 3336 -> 4287 -> 4288 -> 1450 -> 2237 -> 2943 -> 1287 -> 472 -> 3303 -> 4788 -> 431 -> 3301 -> 4102 -> 3646 -> 2804 -> 2742 -> 3627 -> 2501 -> 3264 -> 2435 -> 2894 -> 948 -> 2824 -> 550 -> 2125 -> 1521 -> 2583 -> 2584 -> 4946 -> 2146 -> 1087 -> 1245
*** Time Elapsed = 0.667290
*** Max Bandwidth  = 4092

DJIKSTRA USING HEAP
2652 -> 78 -> 2121 -> 3089 -> 3712 -> 3182 -> 2826 -> 2085 -> 2139 -> 2302 -> 1998 -> 4190 -> 1629 -> 4236 -> 3124 -> 4409 -> 4391 -> 530 -> 3693 -> 923 -> 134 -> 4011 -> 2196 -> 2035 -> 4428 -> 4595 -> 1287 -> 472 -> 3303 -> 4788 -> 2989 -> 3875 -> 1458 -> 3995 -> 1123 -> 211 -> 1245
*** Time Elapsed = 0.646504
*** Max Bandwidth  = 4091

KRUSKAL USING HEAP
2652 -> 78 -> 2121 -> 3089 -> 3712 -> 3182 -> 2826 -> 2085 -> 2139 -> 2302 -> 1998 -> 4190 -> 1629 -> 4236 -> 3124 -> 4409 -> 1302 -> 3066 -> 3937 -> 2026 -> 2657 -> 1769 -> 1154 -> 4288 -> 1450 -> 2237 -> 2943 -> 1287 -> 472 -> 3303 -> 4788 -> 431 -> 3301 -> 4102 -> 3646 -> 2804 -> 2742 -> 3627 -> 2501 -> 3264 -> 2435 -> 2894 -> 948 -> 2824 -> 550 -> 2125 -> 1521 -> 2583 -> 2584 -> 4946 -> 2146 -> 1087 -> 1245
*** Time Elapsed = 26.928918
*** Max Bandwidth  = 4092
--------------------------------------------------
----------------FOR DENSE GRAPHS #2--------------------
Hello World! Built on Nov 26 2019 :: 22:17:55
==
Iteration #1
Source s=1893 && Destination t=2787

DJIKSTRA USING NON HEAP
1893 -> 1087 -> 584 -> 2693 -> 4297 -> 2533 -> 1986 -> 1690 -> 1720 -> 551 -> 1775 -> 599 -> 807 -> 2052 -> 993 -> 792 -> 617 -> 915 -> 881 -> 497 -> 1876 -> 1579 -> 1727 -> 2084 -> 1547 -> 1621 -> 1338 -> 1528 -> 719 -> 2509 -> 55 -> 619 -> 2642 -> 1568 -> 289 -> 3999 -> 2152 -> 2311 -> 3378 -> 1634 -> 2787
*** Time Elapsed = 0.366778
*** Max Bandwidth  = 4081

DJIKSTRA USING HEAP
1893 -> 1087 -> 584 -> 2693 -> 4297 -> 1669 -> 2638 -> 1820 -> 2322 -> 3360 -> 2455 -> 1419 -> 827 -> 2400 -> 4828 -> 3378 -> 1634 -> 2787
*** Time Elapsed = 0.224554
*** Max Bandwidth  = 4081

KRUSKAL USING HEAP
1893 -> 1087 -> 584 -> 2693 -> 4297 -> 1669 -> 2638 -> 1820 -> 3468 -> 1580 -> 4319 -> 2609 -> 2014 -> 290 -> 1077 -> 1894 -> 2431 -> 2368 -> 3511 -> 318 -> 3661 -> 1156 -> 4788 -> 385 -> 2400 -> 4828 -> 3378 -> 1634 -> 2787
*** Time Elapsed = 4.235023
*** Max Bandwidth  = 4081

==
Iteration #2
Source s=4122 && Destination t=3025

DJIKSTRA USING NON HEAP
4122 -> 4465 -> 3240 -> 3027 -> 3593 -> 3471 -> 631 -> 4829 -> 1647 -> 4377 -> 964 -> 4533 -> 3897 -> 542 -> 3496 -> 2132 -> 693 -> 2351 -> 3177 -> 2604 -> 2965 -> 286 -> 521 -> 3850 -> 2748 -> 162 -> 3323 -> 901 -> 2621 -> 1489 -> 488 -> 2439 -> 1813 -> 3586 -> 3396 -> 240 -> 513 -> 1809 -> 634 -> 1282 -> 2638 -> 3959 -> 3025
*** Time Elapsed = 0.239818
*** Max Bandwidth  = 4091

DJIKSTRA USING HEAP
4122 -> 4465 -> 3240 -> 3027 -> 3593 -> 3471 -> 631 -> 4829 -> 1647 -> 4377 -> 964 -> 4533 -> 3897 -> 2886 -> 4794 -> 4441 -> 815 -> 4504 -> 3896 -> 3184 -> 2200 -> 4129 -> 1054 -> 238 -> 1915 -> 3859 -> 3321 -> 1719 -> 786 -> 2279 -> 2278 -> 643 -> 214 -> 86 -> 802 -> 4844 -> 4809 -> 3025
*** Time Elapsed = 0.194826
*** Max Bandwidth  = 4091

KRUSKAL USING HEAP
4122 -> 4465 -> 3240 -> 3027 -> 3593 -> 3471 -> 631 -> 4829 -> 1647 -> 4377 -> 964 -> 4533 -> 3897 -> 2886 -> 4794 -> 2338 -> 2813 -> 6 -> 1906 -> 3582 -> 3030 -> 1014 -> 2265 -> 2762 -> 1755 -> 1787 -> 2955 -> 4999 -> 329 -> 3012 -> 994 -> 4515 -> 3165 -> 4902 -> 2124 -> 4979 -> 3360 -> 2322 -> 1820 -> 2638 -> 3959 -> 3025
*** Time Elapsed = 9.586739
*** Max Bandwidth  = 4091

==
Iteration #3
Source s=222 && Destination t=4659

DJIKSTRA USING NON HEAP
222 -> 270 -> 4405 -> 4693 -> 3269 -> 93 -> 1355 -> 1856 -> 2554 -> 21 -> 770 -> 58 -> 1058 -> 1402 -> 1579 -> 1727 -> 2084 -> 1547 -> 1621 -> 1338 -> 1528 -> 719 -> 2509 -> 1592 -> 210 -> 4659
*** Time Elapsed = 0.737220
*** Max Bandwidth  = 4088

DJIKSTRA USING HEAP
222 -> 270 -> 4405 -> 4805 -> 2573 -> 2514 -> 476 -> 4762 -> 3126 -> 1888 -> 3717 -> 4068 -> 4829 -> 567 -> 3761 -> 3329 -> 3193 -> 2086 -> 2329 -> 324 -> 809 -> 4163 -> 4822 -> 62 -> 63 -> 994 -> 4515 -> 4801 -> 1407 -> 1973 -> 2502 -> 2668 -> 3566 -> 4659
*** Time Elapsed = 0.573944
*** Max Bandwidth  = 4088

KRUSKAL USING HEAP
222 -> 270 -> 4405 -> 4693 -> 3269 -> 3075 -> 2149 -> 3088 -> 2378 -> 4668 -> 3948 -> 2347 -> 4151 -> 3479 -> 3616 -> 1799 -> 1448 -> 1338 -> 1528 -> 719 -> 3066 -> 1945 -> 1989 -> 1363 -> 4178 -> 4683 -> 2143 -> 3887 -> 4425 -> 2862 -> 4089 -> 3715 -> 3072 -> 4446 -> 3425 -> 3858 -> 797 -> 2440 -> 1097 -> 4037 -> 946 -> 1640 -> 1652 -> 55 -> 2509 -> 1592 -> 210 -> 4659
*** Time Elapsed = 15.140027
*** Max Bandwidth  = 4088

==
Iteration #4
Source s=3253 && Destination t=1741

DJIKSTRA USING NON HEAP
3253 -> 2110 -> 1876 -> 1579 -> 1402 -> 1058 -> 58 -> 770 -> 1872 -> 2455 -> 3360 -> 2322 -> 1820 -> 2638 -> 1282 -> 3453 -> 259 -> 1640 -> 1652 -> 55 -> 2509 -> 1592 -> 210 -> 4659 -> 3566 -> 4021 -> 1741
*** Time Elapsed = 0.633232
*** Max Bandwidth  = 4091

DJIKSTRA USING HEAP
3253 -> 2110 -> 4741 -> 3543 -> 801 -> 1461 -> 2842 -> 2898 -> 4966 -> 4212 -> 2620 -> 4992 -> 2748 -> 162 -> 3323 -> 4464 -> 1695 -> 3698 -> 4750 -> 917 -> 4659 -> 3566 -> 4021 -> 1741
*** Time Elapsed = 0.480757
*** Max Bandwidth  = 4091

KRUSKAL USING HEAP
3253 -> 2110 -> 1876 -> 1579 -> 2491 -> 1100 -> 1247 -> 1925 -> 1469 -> 4212 -> 2620 -> 4992 -> 2748 -> 162 -> 3323 -> 4464 -> 1695 -> 3698 -> 4750 -> 917 -> 4659 -> 3566 -> 4021 -> 1741
*** Time Elapsed = 21.449246
*** Max Bandwidth  = 4091

==
Iteration #5
Source s=1814 && Destination t=2323

DJIKSTRA USING NON HEAP
1814 -> 3495 -> 2273 -> 2132 -> 693 -> 557 -> 2313 -> 2996 -> 1089 -> 1855 -> 2415 -> 2980 -> 1797 -> 3002 -> 325 -> 172 -> 2922 -> 946 -> 1640 -> 1652 -> 2287 -> 1412 -> 1411 -> 2389 -> 551 -> 1720 -> 1690 -> 737 -> 2327 -> 269 -> 824 -> 848 -> 3731 -> 561 -> 1304 -> 2323
*** Time Elapsed = 0.651465
*** Max Bandwidth  = 4090

DJIKSTRA USING HEAP
1814 -> 3495 -> 2273 -> 2132 -> 693 -> 2351 -> 3177 -> 2604 -> 2965 -> 2746 -> 4890 -> 56 -> 119 -> 1708 -> 3433 -> 2323
*** Time Elapsed = 0.995911
*** Max Bandwidth  = 4088

KRUSKAL USING HEAP
1814 -> 3495 -> 2273 -> 2132 -> 693 -> 3541 -> 3575 -> 2866 -> 557 -> 4360 -> 2050 -> 3478 -> 1028 -> 3103 -> 822 -> 3569 -> 2491 -> 1579 -> 1876 -> 2110 -> 3329 -> 3761 -> 4837 -> 4279 -> 2590 -> 2748 -> 162 -> 3323 -> 4464 -> 1695 -> 4140 -> 4987 -> 46 -> 937 -> 680 -> 4095 -> 561 -> 1304 -> 2323
*** Time Elapsed = 27.110798
*** Max Bandwidth  = 4090
--------------------------------------------------
----------------FOR DENSE GRAPHS #3--------------------
Hello World! Built on Nov 26 2019 :: 22:17:55
==
Iteration #1
Source s=3006 && Destination t=1726

DJIKSTRA USING NON HEAP
3006 -> 3201 -> 1890 -> 216 -> 1635 -> 149 -> 1782 -> 41 -> 1692 -> 1096 -> 870 -> 792 -> 1207 -> 170 -> 126 -> 891 -> 1210 -> 925 -> 233 -> 944 -> 1688 -> 1121 -> 341 -> 883 -> 1819 -> 194 -> 369 -> 835 -> 826 -> 1217 -> 347 -> 666 -> 939 -> 1349 -> 1097 -> 1263 -> 1429 -> 249 -> 183 -> 704 -> 1412 -> 285 -> 788 -> 1052 -> 114 -> 1195 -> 1071 -> 399 -> 1848 -> 1319 -> 1788 -> 1695 -> 577 -> 699 -> 1757 -> 3878 -> 1726
*** Time Elapsed = 0.268601
*** Max Bandwidth  = 4084

DJIKSTRA USING HEAP
3006 -> 3201 -> 1443 -> 1887 -> 3003 -> 1337 -> 1271 -> 3322 -> 269 -> 1069 -> 2264 -> 219 -> 930 -> 1266 -> 4575 -> 1711 -> 802 -> 1853 -> 795 -> 3039 -> 699 -> 1757 -> 3878 -> 1726
*** Time Elapsed = 0.200529
*** Max Bandwidth  = 4084

KRUSKAL USING HEAP
3006 -> 3201 -> 1445 -> 2541 -> 4209 -> 1795 -> 2243 -> 2543 -> 2480 -> 4600 -> 2508 -> 2728 -> 4409 -> 3143 -> 2230 -> 2631 -> 3842 -> 1760 -> 3585 -> 4938 -> 1926 -> 2393 -> 4953 -> 2935 -> 3277 -> 1096 -> 2510 -> 2517 -> 1983 -> 3180 -> 4145 -> 2910 -> 1814 -> 2126 -> 334 -> 3526 -> 918 -> 1034 -> 2271 -> 3228 -> 3011 -> 4787 -> 4296 -> 1137 -> 3573 -> 2501 -> 2149 -> 3229 -> 315 -> 2512 -> 4040 -> 3082 -> 550 -> 4625 -> 4100 -> 3084 -> 4924 -> 4555 -> 193 -> 4401 -> 3537 -> 3731 -> 2664 -> 3555 -> 272 -> 250 -> 4318 -> 4815 -> 151 -> 1787 -> 4236 -> 4781 -> 144 -> 4167 -> 1500 -> 3524 -> 3106 -> 119 -> 383 -> 1047 -> 2057 -> 3878 -> 1726
*** Time Elapsed = 4.218216
*** Max Bandwidth  = 4084

==
Iteration #2
Source s=1907 && Destination t=4939

DJIKSTRA USING NON HEAP
1907 -> 1846 -> 1111 -> 2775 -> 2452 -> 908 -> 154 -> 897 -> 4939
*** Time Elapsed = 0.524881
*** Max Bandwidth  = 4082

DJIKSTRA USING HEAP
1907 -> 1846 -> 1111 -> 2775 -> 2452 -> 2587 -> 2076 -> 4188 -> 1446 -> 1561 -> 1896 -> 4298 -> 4939
*** Time Elapsed = 0.193329
*** Max Bandwidth  = 4082

KRUSKAL USING HEAP
1907 -> 1846 -> 4767 -> 2683 -> 3232 -> 2608 -> 3604 -> 1236 -> 4391 -> 1729 -> 349 -> 4778 -> 3512 -> 1716 -> 4081 -> 2501 -> 3573 -> 1137 -> 4296 -> 4787 -> 3011 -> 3228 -> 2271 -> 1034 -> 918 -> 3526 -> 334 -> 2126 -> 1814 -> 2910 -> 4145 -> 3180 -> 1983 -> 2517 -> 2510 -> 1096 -> 3277 -> 2935 -> 4953 -> 2393 -> 1926 -> 4938 -> 3585 -> 1760 -> 3842 -> 2862 -> 120 -> 41 -> 3120 -> 4542 -> 2446 -> 3535 -> 1620 -> 4939
*** Time Elapsed = 9.503941
*** Max Bandwidth  = 4082

==
Iteration #3
Source s=3897 && Destination t=3355

DJIKSTRA USING NON HEAP
3897 -> 688 -> 2964 -> 453 -> 1830 -> 1958 -> 45 -> 527 -> 526 -> 2056 -> 1769 -> 1621 -> 3074 -> 1770 -> 1082 -> 2464 -> 1824 -> 1135 -> 764 -> 1174 -> 2331 -> 3427 -> 639 -> 1649 -> 2136 -> 883 -> 341 -> 3281 -> 53 -> 3355
*** Time Elapsed = 0.375233
*** Max Bandwidth  = 4090

DJIKSTRA USING HEAP
3897 -> 688 -> 2964 -> 453 -> 878 -> 3525 -> 872 -> 759 -> 1861 -> 2537 -> 3754 -> 499 -> 64 -> 3742 -> 4416 -> 1966 -> 3504 -> 1177 -> 906 -> 804 -> 1510 -> 3049 -> 1449 -> 4948 -> 1784 -> 1599 -> 1649 -> 2136 -> 883 -> 341 -> 3281 -> 53 -> 3355
*** Time Elapsed = 0.379460
*** Max Bandwidth  = 4090

KRUSKAL USING HEAP
3897 -> 688 -> 2964 -> 453 -> 1830 -> 4247 -> 2862 -> 3842 -> 1760 -> 3585 -> 4938 -> 1926 -> 2393 -> 4953 -> 2935 -> 3277 -> 1096 -> 2510 -> 2517 -> 1983 -> 3180 -> 4145 -> 2910 -> 1981 -> 1655 -> 3128 -> 3987 -> 4926 -> 87 -> 639 -> 1649 -> 2136 -> 883 -> 341 -> 3281 -> 53 -> 3355
*** Time Elapsed = 15.132410
*** Max Bandwidth  = 4090

==
Iteration #4
Source s=4942 && Destination t=239

DJIKSTRA USING NON HEAP
4942 -> 1780 -> 1781 -> 1516 -> 1383 -> 2735 -> 366 -> 1718 -> 1537 -> 1429 -> 249 -> 28 -> 1144 -> 1499 -> 1243 -> 1870 -> 1444 -> 524 -> 2075 -> 549 -> 633 -> 439 -> 356 -> 1030 -> 727 -> 239
*** Time Elapsed = 0.370478
*** Max Bandwidth  = 4087

DJIKSTRA USING HEAP
4942 -> 1780 -> 1781 -> 1516 -> 1383 -> 848 -> 4668 -> 820 -> 4629 -> 2258 -> 2604 -> 950 -> 352 -> 2630 -> 4938 -> 2980 -> 3831 -> 4574 -> 1605 -> 4829 -> 4948 -> 1449 -> 3049 -> 1814 -> 1723 -> 4222 -> 4588 -> 433 -> 2652 -> 85 -> 239
*** Time Elapsed = 0.415270
*** Max Bandwidth  = 4087

KRUSKAL USING HEAP
4942 -> 1780 -> 3340 -> 231 -> 3172 -> 2016 -> 107 -> 2439 -> 2098 -> 4995 -> 1195 -> 2025 -> 980 -> 4555 -> 4924 -> 3084 -> 4100 -> 4625 -> 550 -> 3082 -> 4040 -> 4658 -> 2881 -> 1174 -> 764 -> 4397 -> 412 -> 3640 -> 3508 -> 2620 -> 3256 -> 75 -> 3511 -> 429 -> 4202 -> 2308 -> 507 -> 2739 -> 1213 -> 2978 -> 638 -> 4829 -> 783 -> 3697 -> 649 -> 239
*** Time Elapsed = 21.230857
*** Max Bandwidth  = 4087

==
Iteration #5
Source s=1783 && Destination t=1648

DJIKSTRA USING NON HEAP
1783 -> 2913 -> 2460 -> 3539 -> 1421 -> 4154 -> 3392 -> 1210 -> 925 -> 4005 -> 834 -> 905 -> 2256 -> 2306 -> 177 -> 2082 -> 361 -> 3076 -> 182 -> 1409 -> 3232 -> 1495 -> 839 -> 2645 -> 985 -> 3170 -> 1288 -> 28 -> 1144 -> 1499 -> 1956 -> 1442 -> 1732 -> 217 -> 2655 -> 119 -> 383 -> 1047 -> 2057 -> 1222 -> 2786 -> 3149 -> 2169 -> 2476 -> 75 -> 3256 -> 2620 -> 3508 -> 3640 -> 412 -> 3087 -> 3381 -> 1382 -> 425 -> 167 -> 1533 -> 2480 -> 1552 -> 1381 -> 2686 -> 3627 -> 692 -> 1333 -> 2208 -> 144 -> 2300 -> 1351 -> 3626 -> 961 -> 2614 -> 3772 -> 3948 -> 3413 -> 2007 -> 159 -> 454 -> 3797 -> 3341 -> 2795 -> 2014 -> 648 -> 3702 -> 3446 -> 3755 -> 2520 -> 1648
*** Time Elapsed = 0.585401
*** Max Bandwidth  = 4091

DJIKSTRA USING HEAP
1783 -> 2913 -> 2460 -> 3539 -> 1421 -> 4154 -> 3392 -> 1210 -> 925 -> 4005 -> 834 -> 2986 -> 4391 -> 1729 -> 349 -> 4778 -> 3512 -> 1716 -> 3753 -> 1648
*** Time Elapsed = 0.979749
*** Max Bandwidth  = 4088

KRUSKAL USING HEAP
1783 -> 2913 -> 2460 -> 3539 -> 1421 -> 4154 -> 3392 -> 4428 -> 2717 -> 1858 -> 1830 -> 4247 -> 2862 -> 3842 -> 1760 -> 3644 -> 3349 -> 4192 -> 111 -> 4084 -> 4314 -> 1968 -> 3950 -> 4328 -> 3341 -> 2795 -> 2014 -> 648 -> 3702 -> 3446 -> 3755 -> 2520 -> 1648
*** Time Elapsed = 27.031536
*** Max Bandwidth  = 4091
--------------------------------------------------
----------------FOR DENSE GRAPHS #4--------------------
Hello World! Built on Nov 26 2019 :: 22:17:55
==
Iteration #1
Source s=4224 && Destination t=4745

DJIKSTRA USING NON HEAP
4224 -> 4413 -> 269 -> 1358 -> 240 -> 303 -> 2001 -> 1830 -> 1856 -> 1815 -> 2400 -> 1599 -> 6 -> 1146 -> 2661 -> 550 -> 2743 -> 829 -> 1208 -> 934 -> 1864 -> 2600 -> 656 -> 4745
*** Time Elapsed = 0.310243
*** Max Bandwidth  = 4088

DJIKSTRA USING HEAP
4224 -> 4413 -> 269 -> 988 -> 4 -> 2526 -> 3202 -> 510 -> 2875 -> 1212 -> 726 -> 4892 -> 3064 -> 833 -> 4745
*** Time Elapsed = 0.089711
*** Max Bandwidth  = 4088

KRUSKAL USING HEAP
4224 -> 4413 -> 4103 -> 315 -> 989 -> 3518 -> 1964 -> 2721 -> 2817 -> 452 -> 4937 -> 2024 -> 4489 -> 2326 -> 1822 -> 488 -> 4447 -> 4333 -> 3974 -> 1373 -> 2432 -> 4468 -> 1043 -> 4403 -> 2275 -> 120 -> 163 -> 231 -> 3065 -> 294 -> 675 -> 2372 -> 3535 -> 3195 -> 4816 -> 4389 -> 3584 -> 2028 -> 2032 -> 4973 -> 3640 -> 299 -> 1228 -> 2031 -> 3182 -> 2600 -> 656 -> 4745
*** Time Elapsed = 4.221260
*** Max Bandwidth  = 4088

==
Iteration #2
Source s=1705 && Destination t=1342

DJIKSTRA USING NON HEAP
1705 -> 3099 -> 3198 -> 490 -> 445 -> 428 -> 277 -> 2759 -> 1098 -> 1412 -> 1492 -> 4211 -> 1763 -> 4897 -> 2713 -> 4431 -> 607 -> 3238 -> 3101 -> 1185 -> 3991 -> 1491 -> 778 -> 1500 -> 4809 -> 4995 -> 356 -> 833 -> 3604 -> 2535 -> 2534 -> 608 -> 127 -> 1465 -> 1342
*** Time Elapsed = 0.538868
*** Max Bandwidth  = 4087

DJIKSTRA USING HEAP
1705 -> 3099 -> 3198 -> 905 -> 2313 -> 334 -> 1485 -> 4680 -> 3812 -> 4366 -> 1187 -> 2130 -> 4754 -> 608 -> 127 -> 1465 -> 1342
*** Time Elapsed = 0.391066
*** Max Bandwidth  = 4087

KRUSKAL USING HEAP
1705 -> 3099 -> 3198 -> 490 -> 445 -> 428 -> 277 -> 2759 -> 1098 -> 1412 -> 1492 -> 4211 -> 1763 -> 4897 -> 2713 -> 4431 -> 4880 -> 4403 -> 2275 -> 120 -> 163 -> 231 -> 3065 -> 294 -> 675 -> 2372 -> 3535 -> 3195 -> 4816 -> 1974 -> 131 -> 2804 -> 1683 -> 2587 -> 3463 -> 3768 -> 4235 -> 1998 -> 2457 -> 2535 -> 2534 -> 608 -> 127 -> 1465 -> 1342
*** Time Elapsed = 9.488899
*** Max Bandwidth  = 4087

==
Iteration #3
Source s=4326 && Destination t=4245

DJIKSTRA USING NON HEAP
4326 -> 2523 -> 4429 -> 91 -> 2236 -> 2601 -> 3779 -> 1906 -> 3340 -> 942 -> 4128 -> 4409 -> 308 -> 2587 -> 1683 -> 2804 -> 131 -> 1974 -> 4816 -> 4389 -> 3584 -> 2028 -> 2032 -> 4058 -> 841 -> 1960 -> 1336 -> 1514 -> 3599 -> 957 -> 3068 -> 4042 -> 2624 -> 1696 -> 4245
*** Time Elapsed = 0.711802
*** Max Bandwidth  = 4090

DJIKSTRA USING HEAP
4326 -> 2523 -> 4429 -> 91 -> 2236 -> 4573 -> 2721 -> 2817 -> 452 -> 4937 -> 2024 -> 4489 -> 2326 -> 1822 -> 488 -> 4447 -> 4333 -> 3974 -> 1373 -> 2432 -> 4468 -> 1043 -> 4418 -> 4263 -> 4194 -> 4820 -> 1000 -> 528 -> 3578 -> 1664 -> 3683 -> 1228 -> 2031 -> 3182 -> 2600 -> 2481 -> 31 -> 1128 -> 1173 -> 4381 -> 1880 -> 991 -> 2668 -> 2120 -> 54 -> 2535 -> 3604 -> 833 -> 356 -> 4995 -> 4809 -> 1500 -> 778 -> 1491 -> 3991 -> 1185 -> 2321 -> 3699 -> 1828 -> 4694 -> 2628 -> 4733 -> 1308 -> 4516 -> 904 -> 4019 -> 1696 -> 4245
*** Time Elapsed = 0.522209
*** Max Bandwidth  = 4090

KRUSKAL USING HEAP
4326 -> 2523 -> 4429 -> 91 -> 2236 -> 4573 -> 2721 -> 1964 -> 3518 -> 989 -> 315 -> 3392 -> 2190 -> 1352 -> 4747 -> 3405 -> 3184 -> 2471 -> 1014 -> 730 -> 291 -> 544 -> 713 -> 2983 -> 2280 -> 3253 -> 617 -> 2041 -> 761 -> 4450 -> 731 -> 4290 -> 2697 -> 2474 -> 4060 -> 3753 -> 3943 -> 3665 -> 86 -> 3105 -> 2438 -> 3033 -> 4008 -> 1491 -> 3991 -> 1185 -> 3101 -> 3238 -> 607 -> 4431 -> 4880 -> 4403 -> 1043 -> 4468 -> 3411 -> 584 -> 3195 -> 4816 -> 4389 -> 3584 -> 2028 -> 2032 -> 4058 -> 841 -> 1960 -> 1336 -> 1514 -> 3599 -> 957 -> 3068 -> 4042 -> 2624 -> 1696 -> 4245
*** Time Elapsed = 15.127328
*** Max Bandwidth  = 4090

==
Iteration #4
Source s=1367 && Destination t=3403

DJIKSTRA USING NON HEAP
1367 -> 1143 -> 2756 -> 3776 -> 3028 -> 2296 -> 3323 -> 1121 -> 1783 -> 2281 -> 884 -> 3621 -> 2800 -> 2381 -> 3107 -> 3179 -> 2009 -> 93 -> 2590 -> 3432 -> 984 -> 336 -> 953 -> 1988 -> 1493 -> 2461 -> 196 -> 3544 -> 503 -> 1667 -> 151 -> 2635 -> 1942 -> 1608 -> 729 -> 1359 -> 3855 -> 2042 -> 1669 -> 2478 -> 544 -> 713 -> 2983 -> 2280 -> 1345 -> 2569 -> 1511 -> 403 -> 1738 -> 1480 -> 2283 -> 1716 -> 836 -> 440 -> 1042 -> 1273 -> 1464 -> 3403
*** Time Elapsed = 0.437294
*** Max Bandwidth  = 4091

DJIKSTRA USING HEAP
1367 -> 1143 -> 4038 -> 1636 -> 2758 -> 3888 -> 4782 -> 2978 -> 801 -> 4041 -> 3919 -> 1033 -> 3629 -> 3734 -> 836 -> 440 -> 1042 -> 1273 -> 1464 -> 3403
*** Time Elapsed = 0.546090
*** Max Bandwidth  = 4091

KRUSKAL USING HEAP
1367 -> 1143 -> 4038 -> 1636 -> 2758 -> 3888 -> 4782 -> 2978 -> 801 -> 3739 -> 11 -> 4033 -> 4041 -> 3919 -> 1033 -> 3629 -> 3734 -> 836 -> 440 -> 1042 -> 1273 -> 1464 -> 3403
*** Time Elapsed = 21.294997
*** Max Bandwidth  = 4091

==
Iteration #5
Source s=4291 && Destination t=3237

DJIKSTRA USING NON HEAP
4291 -> 2289 -> 4355 -> 285 -> 3992 -> 3268 -> 952 -> 2744 -> 3646 -> 4653 -> 3596 -> 428 -> 445 -> 490 -> 3198 -> 905 -> 3781 -> 595 -> 3995 -> 2984 -> 1177 -> 736 -> 2661 -> 550 -> 1084 -> 3387 -> 410 -> 600 -> 3175 -> 49 -> 3716 -> 312 -> 2372 -> 3535 -> 3195 -> 584 -> 3411 -> 3347 -> 1225 -> 3316 -> 3981 -> 3681 -> 1650 -> 3207 -> 2804 -> 1683 -> 2587 -> 3463 -> 3768 -> 4235 -> 1998 -> 2457 -> 2535 -> 2534 -> 608 -> 127 -> 1483 -> 919 -> 465 -> 2394 -> 1775 -> 2722 -> 987 -> 2925 -> 3603 -> 3452 -> 4525 -> 240 -> 396 -> 2223 -> 3237
*** Time Elapsed = 0.932026
*** Max Bandwidth  = 4090

DJIKSTRA USING HEAP
4291 -> 2289 -> 4355 -> 285 -> 3992 -> 3268 -> 952 -> 2744 -> 3646 -> 4653 -> 3596 -> 428 -> 445 -> 490 -> 3198 -> 905 -> 2313 -> 334 -> 1485 -> 4680 -> 3812 -> 4366 -> 1187 -> 2130 -> 4754 -> 608 -> 127 -> 1483 -> 919 -> 465 -> 2394 -> 1775 -> 2722 -> 987 -> 2925 -> 3603 -> 3452 -> 4525 -> 240 -> 396 -> 2223 -> 3237
*** Time Elapsed = 0.676692
*** Max Bandwidth  = 4090

KRUSKAL USING HEAP
4291 -> 2289 -> 4355 -> 285 -> 3992 -> 3268 -> 952 -> 2744 -> 3646 -> 4653 -> 3596 -> 428 -> 277 -> 2759 -> 1098 -> 1412 -> 1492 -> 4211 -> 1763 -> 4897 -> 2713 -> 4431 -> 607 -> 3238 -> 3101 -> 1185 -> 3991 -> 1491 -> 778 -> 1500 -> 4858 -> 1529 -> 1998 -> 2457 -> 2535 -> 2534 -> 608 -> 127 -> 1483 -> 919 -> 465 -> 2394 -> 1775 -> 2722 -> 987 -> 2925 -> 3603 -> 3452 -> 4525 -> 240 -> 396 -> 2223 -> 3237
*** Time Elapsed = 27.569386
*** Max Bandwidth  = 4090
--------------------------------------------------
----------------FOR DENSE GRAPHS #5--------------------
Hello World! Built on Nov 26 2019 :: 22:17:55
==
Iteration #1
Source s=279 && Destination t=3416

DJIKSTRA USING NON HEAP
279 -> 281 -> 319 -> 2026 -> 1064 -> 1956 -> 414 -> 2374 -> 1764 -> 1501 -> 3846 -> 579 -> 1614 -> 1009 -> 2261 -> 2006 -> 3341 -> 1709 -> 1100 -> 2659 -> 2497 -> 674 -> 3219 -> 1529 -> 519 -> 127 -> 1811 -> 3632 -> 924 -> 1177 -> 2421 -> 2093 -> 1981 -> 1349 -> 1651 -> 2987 -> 3054 -> 1979 -> 4051 -> 2009 -> 3393 -> 2108 -> 2688 -> 1385 -> 3116 -> 4249 -> 2902 -> 1295 -> 2001 -> 3942 -> 1254 -> 3244 -> 3416
*** Time Elapsed = 0.185270
*** Max Bandwidth  = 4091

DJIKSTRA USING HEAP
279 -> 281 -> 319 -> 4635 -> 1238 -> 3062 -> 4825 -> 2342 -> 1681 -> 4116 -> 1757 -> 2219 -> 502 -> 4141 -> 593 -> 3810 -> 4364 -> 2367 -> 3888 -> 3416
*** Time Elapsed = 0.163358
*** Max Bandwidth  = 4090

KRUSKAL USING HEAP
279 -> 281 -> 319 -> 2026 -> 1064 -> 1956 -> 414 -> 2374 -> 1764 -> 1501 -> 3846 -> 579 -> 4836 -> 394 -> 1424 -> 867 -> 3164 -> 439 -> 4908 -> 1537 -> 2571 -> 331 -> 3757 -> 2079 -> 3195 -> 2737 -> 3724 -> 951 -> 1674 -> 2424 -> 1185 -> 515 -> 635 -> 3061 -> 76 -> 3978 -> 1079 -> 4717 -> 376 -> 1060 -> 443 -> 1970 -> 3842 -> 1724 -> 3894 -> 2754 -> 4149 -> 3159 -> 384 -> 3442 -> 3175 -> 4654 -> 1277 -> 4142 -> 430 -> 857 -> 1370 -> 3908 -> 1028 -> 3171 -> 60 -> 1791 -> 4969 -> 1799 -> 987 -> 4956 -> 4050 -> 3728 -> 2287 -> 2856 -> 3088 -> 2063 -> 993 -> 1134 -> 4993 -> 773 -> 132 -> 3974 -> 1526 -> 1474 -> 4057 -> 1521 -> 1145 -> 1012 -> 2325 -> 4083 -> 2881 -> 1303 -> 3016 -> 695 -> 1206 -> 4034 -> 4940 -> 1865 -> 2395 -> 3079 -> 4493 -> 4356 -> 494 -> 616 -> 1227 -> 4446 -> 4351 -> 3563 -> 4714 -> 3611 -> 3942 -> 1254 -> 3244 -> 3416
*** Time Elapsed = 4.232025
*** Max Bandwidth  = 4091

==
Iteration #2
Source s=1388 && Destination t=4650

DJIKSTRA USING NON HEAP
1388 -> 3044 -> 1769 -> 2776 -> 2626 -> 2840 -> 88 -> 3167 -> 3438 -> 456 -> 2175 -> 2939 -> 2942 -> 385 -> 3929 -> 1632 -> 3817 -> 2576 -> 2537 -> 1650 -> 807 -> 2408 -> 1580 -> 391 -> 3613 -> 2048 -> 2179 -> 553 -> 1560 -> 297 -> 1772 -> 3153 -> 2494 -> 1623 -> 949 -> 331 -> 3757 -> 2079 -> 3195 -> 2737 -> 3724 -> 951 -> 1674 -> 1708 -> 967 -> 2300 -> 946 -> 1153 -> 2914 -> 293 -> 2217 -> 3302 -> 4073 -> 3834 -> 4332 -> 1277 -> 4142 -> 430 -> 857 -> 1370 -> 1982 -> 3684 -> 3544 -> 4130 -> 2924 -> 2995 -> 3346 -> 3020 -> 1868 -> 2010 -> 1700 -> 4170 -> 1962 -> 2564 -> 3575 -> 1263 -> 4042 -> 3810 -> 4364 -> 3571 -> 1128 -> 2240 -> 4036 -> 3021 -> 3326 -> 2090 -> 376 -> 1060 -> 443 -> 1970 -> 3842 -> 1284 -> 3532 -> 1675 -> 4923 -> 1042 -> 594 -> 2037 -> 4389 -> 1763 -> 2889 -> 1119 -> 480 -> 3594 -> 1566 -> 2562 -> 4650
*** Time Elapsed = 0.403850
*** Max Bandwidth  = 4091

DJIKSTRA USING HEAP
1388 -> 3044 -> 1769 -> 4782 -> 134 -> 3641 -> 2688 -> 2108 -> 3393 -> 2009 -> 4051 -> 1979 -> 3054 -> 2987 -> 1651 -> 10 -> 4458 -> 1335 -> 436 -> 2756 -> 2559 -> 4678 -> 4332 -> 1277 -> 4142 -> 430 -> 93 -> 4372 -> 2013 -> 366 -> 2377 -> 4195 -> 4050 -> 4956 -> 2742 -> 1157 -> 4278 -> 3131 -> 3888 -> 2367 -> 4364 -> 3571 -> 1128 -> 2240 -> 4036 -> 3021 -> 3326 -> 2090 -> 376 -> 4717 -> 1079 -> 3978 -> 76 -> 3061 -> 635 -> 515 -> 1185 -> 2424 -> 1674 -> 908 -> 1883 -> 2794 -> 2080 -> 1594 -> 483 -> 4650
*** Time Elapsed = 0.257275
*** Max Bandwidth  = 4090

KRUSKAL USING HEAP
1388 -> 3044 -> 1769 -> 2776 -> 2626 -> 2840 -> 228 -> 2291 -> 3050 -> 784 -> 394 -> 1424 -> 867 -> 3164 -> 439 -> 4908 -> 1537 -> 2571 -> 331 -> 3757 -> 2079 -> 3195 -> 2737 -> 3724 -> 951 -> 1674 -> 2424 -> 1185 -> 515 -> 635 -> 3061 -> 76 -> 3978 -> 1079 -> 4717 -> 376 -> 1060 -> 443 -> 1970 -> 3842 -> 1724 -> 3894 -> 2792 -> 2503 -> 4952 -> 1617 -> 2432 -> 1982 -> 3684 -> 3544 -> 4130 -> 2924 -> 424 -> 4619 -> 248 -> 1500 -> 1226 -> 600 -> 3914 -> 2590 -> 777 -> 2342 -> 1681 -> 4116 -> 1757 -> 2219 -> 502 -> 4141 -> 593 -> 3810 -> 4042 -> 1263 -> 1065 -> 3152 -> 359 -> 4016 -> 4409 -> 3193 -> 1131 -> 4259 -> 1819 -> 624 -> 1987 -> 2275 -> 4226 -> 2562 -> 4650
*** Time Elapsed = 9.446883
*** Max Bandwidth  = 4091

==
Iteration #3
Source s=1470 && Destination t=1859

DJIKSTRA USING NON HEAP
1470 -> 262 -> 1302 -> 575 -> 2062 -> 1096 -> 1347 -> 4082 -> 2152 -> 3638 -> 1576 -> 695 -> 3016 -> 1303 -> 3039 -> 3038 -> 600 -> 3914 -> 2590 -> 777 -> 2342 -> 1681 -> 4116 -> 1757 -> 2219 -> 502 -> 4141 -> 593 -> 3810 -> 4042 -> 1263 -> 3575 -> 2564 -> 1962 -> 4170 -> 1700 -> 2010 -> 1868 -> 3020 -> 3346 -> 2995 -> 2924 -> 4130 -> 3544 -> 3684 -> 1982 -> 1370 -> 857 -> 430 -> 4142 -> 1277 -> 4332 -> 3834 -> 4073 -> 3302 -> 2217 -> 293 -> 2914 -> 1153 -> 946 -> 2300 -> 967 -> 1708 -> 1674 -> 951 -> 3724 -> 2737 -> 3195 -> 2079 -> 3757 -> 331 -> 949 -> 1623 -> 2494 -> 3153 -> 1772 -> 297 -> 1560 -> 553 -> 291 -> 4633 -> 1016 -> 475 -> 1859
*** Time Elapsed = 0.544134
*** Max Bandwidth  = 4091

DJIKSTRA USING HEAP
1470 -> 262 -> 1302 -> 575 -> 2062 -> 1096 -> 1347 -> 4082 -> 2152 -> 3638 -> 1576 -> 695 -> 1206 -> 4034 -> 4940 -> 1865 -> 2395 -> 3079 -> 4493 -> 4356 -> 494 -> 616 -> 425 -> 245 -> 2012 -> 4545 -> 2290 -> 2132 -> 277 -> 733 -> 2879 -> 2100 -> 3191 -> 1290 -> 1552 -> 4424 -> 1650 -> 807 -> 2408 -> 1580 -> 391 -> 3613 -> 2048 -> 2179 -> 553 -> 291 -> 4633 -> 1016 -> 475 -> 1859
*** Time Elapsed = 0.521679
*** Max Bandwidth  = 4091

KRUSKAL USING HEAP
1470 -> 262 -> 1302 -> 575 -> 2062 -> 1096 -> 1347 -> 4082 -> 2152 -> 286 -> 2735 -> 1496 -> 1454 -> 4037 -> 3219 -> 1529 -> 519 -> 127 -> 4490 -> 1815 -> 1287 -> 4932 -> 3951 -> 3835 -> 4332 -> 1277 -> 4654 -> 4080 -> 3738 -> 4469 -> 1472 -> 3168 -> 4895 -> 1580 -> 391 -> 3613 -> 2048 -> 2179 -> 553 -> 291 -> 4633 -> 1016 -> 475 -> 1859
*** Time Elapsed = 15.239198
*** Max Bandwidth  = 4091

==
Iteration #4
Source s=1951 && Destination t=393

DJIKSTRA USING NON HEAP
1951 -> 793 -> 624 -> 1819 -> 4259 -> 1131 -> 3282 -> 2350 -> 1606 -> 1676 -> 2805 -> 190 -> 24 -> 23 -> 3076 -> 2226 -> 1888 -> 2769 -> 737 -> 2448 -> 2732 -> 1363 -> 472 -> 119 -> 3409 -> 393
*** Time Elapsed = 0.358456
*** Max Bandwidth  = 4091

DJIKSTRA USING HEAP
1951 -> 793 -> 624 -> 1819 -> 4259 -> 1131 -> 3282 -> 2350 -> 1606 -> 3145 -> 226 -> 684 -> 1244 -> 4159 -> 1649 -> 2012 -> 4545 -> 2290 -> 2132 -> 277 -> 733 -> 2879 -> 2100 -> 3191 -> 1290 -> 1552 -> 4424 -> 1650 -> 2537 -> 1815 -> 2664 -> 2445 -> 3664 -> 2742 -> 4284 -> 927 -> 4364 -> 3571 -> 1128 -> 2240 -> 4238 -> 3633 -> 1335 -> 4458 -> 10 -> 1651 -> 2987 -> 3409 -> 393
*** Time Elapsed = 0.415153
*** Max Bandwidth  = 4091

KRUSKAL USING HEAP
1951 -> 793 -> 1914 -> 3859 -> 3860 -> 4820 -> 2903 -> 2259 -> 206 -> 803 -> 3118 -> 1105 -> 406 -> 3888 -> 2367 -> 4364 -> 3571 -> 1128 -> 2240 -> 4238 -> 3633 -> 1335 -> 436 -> 2756 -> 2559 -> 4678 -> 4332 -> 1277 -> 4142 -> 430 -> 857 -> 1370 -> 3908 -> 1028 -> 3171 -> 60 -> 1791 -> 4969 -> 1799 -> 987 -> 4956 -> 4050 -> 3728 -> 2287 -> 2856 -> 3088 -> 2063 -> 993 -> 1134 -> 4993 -> 773 -> 132 -> 3974 -> 1526 -> 1474 -> 4057 -> 1521 -> 1145 -> 1012 -> 2325 -> 4083 -> 2881 -> 1303 -> 3016 -> 695 -> 1206 -> 4034 -> 4940 -> 1865 -> 2395 -> 3079 -> 4493 -> 4356 -> 494 -> 4366 -> 240 -> 1147 -> 3964 -> 603 -> 3628 -> 4098 -> 3889 -> 2412 -> 2180 -> 3234 -> 4081 -> 2327 -> 2609 -> 393
*** Time Elapsed = 21.239360
*** Max Bandwidth  = 4091

==
Iteration #5
Source s=896 && Destination t=2575

DJIKSTRA USING NON HEAP
896 -> 1592 -> 620 -> 384 -> 3159 -> 4149 -> 2754 -> 3894 -> 3420 -> 2919 -> 1805 -> 3447 -> 3113 -> 2670 -> 2658 -> 2091 -> 2753 -> 1316 -> 2664 -> 1815 -> 2537 -> 1650 -> 4051 -> 2009 -> 3393 -> 2108 -> 41 -> 2045 -> 4694 -> 917 -> 2575
*** Time Elapsed = 1.004209
*** Max Bandwidth  = 4089

DJIKSTRA USING HEAP
896 -> 1592 -> 620 -> 384 -> 3159 -> 1937 -> 4825 -> 2280 -> 2071 -> 1745 -> 2457 -> 1389 -> 4768 -> 1736 -> 589 -> 435 -> 2987 -> 1651 -> 10 -> 4458 -> 1335 -> 436 -> 2756 -> 2559 -> 3317 -> 3698 -> 2812 -> 41 -> 2045 -> 4694 -> 917 -> 2575
*** Time Elapsed = 0.964047
*** Max Bandwidth  = 4089

KRUSKAL USING HEAP
896 -> 1592 -> 620 -> 384 -> 3442 -> 3175 -> 4654 -> 1277 -> 4332 -> 4678 -> 2559 -> 2756 -> 436 -> 1335 -> 3633 -> 4238 -> 2240 -> 1128 -> 3571 -> 4364 -> 3810 -> 4042 -> 1263 -> 3575 -> 2564 -> 1962 -> 4170 -> 1700 -> 2010 -> 1868 -> 3020 -> 3346 -> 2995 -> 2924 -> 424 -> 4619 -> 248 -> 1500 -> 1226 -> 600 -> 3038 -> 3039 -> 1303 -> 1414 -> 4656 -> 481 -> 50 -> 3393 -> 2108 -> 41 -> 2045 -> 4694 -> 917 -> 2575
*** Time Elapsed = 27.191944
*** Max Bandwidth  = 4089
--------------------------------------------------
